Abstract We study the string-property of being periodic and having periodicity smaller than a given bound. Let Σ be a fixed alphabet and let p,n be integers such that $p\leq \frac{n}{2}$ . A length-n string over Σ, α=(α 1,…,α n ), has the property Period(p) if for every i,j∈{1,…,n}, α i =α j whenever i≡j (mod p). For an integer parameter $g\leq \frac{n}{2},$ the property Period(≤g) is the property of all strings that are in Period(p) for some p≤g. The property $\mathit{Period}(\leq \frac{n}{2})$ is also called Periodicity. An ε-test for a property P of length-n strings is a randomized algorithm that for an input α distinguishes between the case that α is in P and the case where one needs to change at least an ε-fraction of the letters of α to get a string in P. The query complexity of the ε-test is the number of letter queries it makes for the worst case input string of length n. We study the query complexity of ε-tests for Period(≤g) as a function of the parameter g, when g varies from 1 to $\frac{n}{2}$ , while ignoring the exact dependence on the proximity parameter ε. We show that there exists an exponential phase transition in the query complexity around g=log n. That is, for every δ>0 and g≥(log n)1 δ , every two-sided error, adaptive ε-test for Period(≤g) has a query complexity that is polynomial in g. On the other hand, for $g\leq \frac{\log{n}}{6}$ , there exists a one-sided error, non-adaptive ε-test for Period(≤g), whose query complexity is poly-logarithmic in g. We also prove that the asymptotic query complexity of one-sided error non-adaptive ε-tests for Periodicity is $\Theta(\sqrt{n\log n}\,)$ , ignoring the dependence on ε.
one-sided error     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Monte_Carlo_algorithm 

query complexity              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decision_tree_model   

asymptotic                    0.9997924039539576^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Big_O_notation        

integer                       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Integer               

one-sided error               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Monte_Carlo_algorithm 

polynomial                    0.9999661710849316^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Time_complexity       

query complexity              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decision_tree_model   

randomized algorithm          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Randomized_algorithm  

alphabet                      0.9999999999952252^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Alphabet_(computer_science)

query complexity              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decision_tree_model   

query complexity              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decision_tree_model   

query complexity              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decision_tree_model   

mod                           0.9999999902441914^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Modular_arithmetic    

strings                       0.9999999999995453^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/String_(computer_science)

phase transition              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Phase_transition      

query complexity              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decision_tree_model   

strings                       0.9999999999995453^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/String_(computer_science)

integers                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Integer               

two-sided error               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Monte_Carlo_algorithm 

exponential                   0.99999999974807^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Time_complexity       

