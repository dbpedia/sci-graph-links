Abstract We consider the issue of how to read out the information from nonstationary spike train ensembles. Based on the theory of censored data in statistics, we propose a ‘censored’ maximum-likelihood estimator (CMLE) for decoding the input in an unbiased way when the spike activity is observed over time windows of finite length. Compared with a rate-based, moment estimator, the CMLE is proved consistently more efficient, particularly with nonstationary inputs. Using our approach, we show that a dynamical input to a group of neurons can be inferred accurately and with high temporal resolution (50 ms) using as few as about one spike per neuron within each decoding window. By applying our theoretical results to a population coding setting, we then demonstrate that a spiking neural network can encode spatial information in such a way to allow fast and precise tracking of a moving target.
spiking neural network1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Spiking_neural_network

censored data                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Censoring_(statistics)

spike train                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Action_potential      

estimator                     0.5969227470138753^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Estimator             

temporal resolution           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Temporal_resolution   

neuron                        0.9999942088618922^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Neuron                

population coding             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Population_coding     

neurons                       0.9939791755876964^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Artificial_neural_network

estimator                     0.5969227470138753^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Estimator             

maximum-likelihood            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Maximum_likelihood    

