Abstract This article presents a distributed random search optimization method, the trust region probability collectives (TRPC) method, for unconstrained optimization problems without closed forms. Through analyzing the framework of the original probability collectives (PC) algorithm, three potential requirements on solving the original PC model are first identified. Then an interior point trust region method for bound constrained minimization is adopted to satisfy these requirements. Besides, the temperature annealing schedule is also redesigned to improve the algorithmic performance. Since the new annealing schedule is linked to the gradient, it is much more flexible and efficient than the original one. Ten benchmark functions are used to test the modified algorithm. Numerical results show that TRPC is superior to the PC algorithm in iteration times, accuracy, and robustness.
algorithm           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

constrained minimization      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Constraint_optimization

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

interior point                0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Interior_point_method 

TRPC                          0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/TRPC                  

probability                   0.7922001208650372^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Probability           

TRPC                          0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/TRPC                  

annealing                     0.6746878482060774^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Annealing_(metallurgy)

trust region                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trust_region          

PC                            0.6085559611488559^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Personal_computer     

closed forms                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Closed-form_expression

PC                            0.6085559611488559^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Personal_computer     

optimization                  0.9999999999980673^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

trust region                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trust_region          

gradient                      0.9999956810452248^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Gradient_descent      

optimization problems         0.9999946117800037^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

probability                   0.7922001208650372^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Probability           

annealing                     0.6746878482060774^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Annealing_(metallurgy)

PC                            0.6085559611488559^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Personal_computer     

