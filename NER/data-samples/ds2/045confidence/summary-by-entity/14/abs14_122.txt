Abstract The aim of the study was to monitor the system theoretic exogenous variables augmented state space algorithm of Aoki (State space modelling of time series. Springer, Heidelberg, 1987) and the VARMAX algorithm of Spliid (J Am Stat Assoc 78(384):843–849, 1983) within a geno-mathematical framework towards optimal parametric conditions/search intervals. Both algorithms were implemented as an integrated support library for a general computational platform, the Genetic Hybrid Algorithm (GHA), where some key parameters of the algorithms are defined in a search process utilizing a mixed geno-mathematical search technique. The empirical results of our tests using real economic data from the European stock market are encouraging. Specifically, the information criteria used in the VARMAX-search (Vector Autoregressive Moving Average algorithm with Exogenous variables) algorithm tend to favor parsimonious model representations automatically. Furthermore, the state space algorithm captures almost the same dynamics as the complex VARMAX-model estimated in the study. Both algorithms have encouraging in sample properties. When generating k-steps forecasts out-of-sample, k > 1, the state space algorithm seems to deteriorate faster than the VARMAX algorithm, however. The results suggest that more empirical testing is needed, especially in different situations with different degrees of model order and stationarity conditions, in order to provide more evidence on the suitability of the competing methods in particular cases. We demonstrated that the Genetic Hybrid Algorithm can be used as a generic platform for parametric search in vector valued time series modelling. Efficient procedures for optimal grouping of the individual time series processes and recognition of heteroskedasticity may improve the performance of the algorithms further.
algorithm           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

algorithms                    0.9999999998553903^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

exogenous                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Exogeny               

algorithms                    0.9999999998553903^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

algorithms                    0.9999999998553903^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

stock market                  0.9999999991312052^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Stock_market          

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

State space                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/State_space_(dynamical_system)

time series                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Time_series           

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

heteroskedasticity            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Heteroscedasticity    

algorithms                    0.9999999998553903^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

Springer                      0.867040052389466^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Jerry_Springer        

time series                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Time_series           

Heidelberg                    0.9964844929695373^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Heidelberg            

stationarity                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Stationary_process    

dynamics                      0.9999999998244675^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Dynamical_system      

time series                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Time_series           

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

vector                        0.9886817940177959^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Array_data_structure  

library                       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Library_(computing)   

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

