Abstract This paper deals with the problem of parameter significance estimation, and its application to currency exchange rate prediction. The basic problem is that over the years, practitioners in the field of financial engineering have developed dozens of technical and fundamental indicators on the basis of which they try to predict financial time series. The practitioners are now faced with the problem of finding out which combinations of those indicators are most significant or relevant, and how their significance changes over time. The authors propose a novel neural architecture calledSupNet for estimating the significance of various parameters. The methodology is based on the principle of penalizing those features that are the largest contributors to the error term. Two algorithms based on this principle are proposed. This approach is different from related methodologies, which are based on the principle of removing parameters with the least significance. The proposed methodology is demonstrated on the next day returns of the DM-US currency exchange rate, and promising results are obtained.
exchange rate       0.9999876252209675^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exchange_rate         

error term                    0.999999977796165^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Errors_and_residuals_in_statistics

exchange rate                 0.9999876252209675^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exchange_rate         

currency                      0.9982820611927782^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Currency              

time series                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Time_series           

currency                      0.9982820611927782^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Currency              

architecture                  0.999774797011414^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Software_architecture 

algorithms                    0.9999995403877538^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

