Abstract In the first part of this article series, we had derived Domain Decomposition (DD) preconditioners containing three block matrices which must be specified for specific applications. In the present paper, we consider finite element equations arising from the DD discretization of plane, symmetric, 2nd-order, elliptic b.v.p.s and specify the matrices involved in the preconditioner via multigrid and hierarchical techniques. The resulting DD-PCCG methods are asymptotically almost optimal with respect to the operation count and well suited for parallel computations on MIMD computers with local memory and message passing. The numerical experiments performed on a transputer hypercube confirm the efficiency of the DD preconditioners proposed.
multigrid           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Multigrid_method      

discretization                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Discretization        

transputer                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transputer            

block matrices                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Block_matrix          

DD                            0.8756902459093017^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Doctor_of_Divinity    

MIMD                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/MIMD                  

preconditioners               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Preconditioner        

hypercube                     0.9999945975018097^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/MIMD                  

memory                        0.9532980946766083^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_memory       

matrices                      0.9999999999995453^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Matrix_(mathematics)  

symmetric                     0.9999972968954735^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Symmetric_matrix      

message passing               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Message_passing       

DD                            0.8756902459093017^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Doctor_of_Divinity    

finite element                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Finite_element_method 

preconditioners               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Preconditioner        

DD                            0.8756902459093017^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Doctor_of_Divinity    

preconditioner                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Preconditioner        

