Abstract In this paper, we present two linear-size external memory data structures for approximate range searching. Our first structure, the BAR-B-tree, stores a set of N points in ℝ d and can report all points inside a query range Q by accessing O(log  B N+ε γ +k ε /B) disk blocks, where B is the disk block size, γ=1−d for convex queries and γ=−d otherwise, and k ε is the number of points lying within a distance of ε⋅diam (Q) to the query range Q. Our second structure, the object-BAR-B-tree, is able to store objects of arbitrary shapes of constant complexity and provides similar query guarantees. In addition, both structures can support other types of range searching queries such as range aggregation and nearest-neighbor. Finally, we present I/O-efficient algorithms to build these structures.
data structures     0.9999999997967279^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_structure        

N+                            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Nitrogen              

convex                        0.6580139123735657^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Convex_set            

range searching               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Range_searching       

disk block                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Block_(data_storage)  

memory                        0.5927049782586916^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Memory_management     

algorithms                    0.675836394696535^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Algorithm             

range searching               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Range_searching       

