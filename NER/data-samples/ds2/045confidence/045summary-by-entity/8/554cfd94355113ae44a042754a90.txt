Abstract In multi-relational databases, a view, which is a context- and content-dependent subset of one or more tables (or other views), is often used to preserve privacy by hiding sensitive information. However, recent developments in data mining present a new challenge for database security even when traditional database security techniques, such as database access control, are employed. This paper presents a data mining framework using semi-supervised learning that demonstrates the potential for privacy leakage in multi-relational databases. Many different types of semi-supervised learning techniques, such as the K-nearest neighbor (KNN) method, can be used to demonstrate privacy leakage. However, we also introduce a new approach to semi-supervised learning, hyperclique pattern-based semi-supervised learning (HPSL), which differs from traditional semi-supervised learning approaches in that it considers the similarity among groups of objects instead of only pairs of objects. Our experimental results show that both the KNN and HPSL methods have the ability to compromise database security, although the HPSL is better at this privacy violation (has higher prediction accuracy) than the KNN method. Finally, we provide a principle for avoiding privacy leakage in multi-relational databases via semi-supervised learning and illustrate this principle with a simple preventive technique whose effectiveness is demonstrated by experiments.
database security   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Database_security     

data mining                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Data_mining           

data mining                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Data_mining           

semi-supervised learning      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Semi-supervised_learning

database security             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Database_security     

KNN                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/K-nearest_neighbors_algorithm

semi-supervised learning      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Semi-supervised_learning

access control                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Access_control        

database security             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Database_security     

semi-supervised learning      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Semi-supervised_learning

KNN                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/K-nearest_neighbors_algorithm

KNN                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/K-nearest_neighbors_algorithm

semi-supervised learning      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Semi-supervised_learning

semi-supervised learning      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Semi-supervised_learning

semi-supervised learning      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Semi-supervised_learning

