Abstract. Internet broadcasting - the simultaneous distribution of live content streams to a large audience - has a number of interesting applications ranging from real-time broadcasts of audio/video streams for online concerts or sporting events to efficient and reliable large-scale software distribution. We identify three fundamental requirements for scalable broadcasting services: an efficient infrastructure for large-scale broadcasting, an ability to adapt the infrastructure to suit the requirements of a wide range of applications, and ease of deployment of the infrastructure. Although solutions such as the network-layer IP multicast approach and a slew of overlay distribution networks exist today, none of these technologies satisfactorily addresses all of the above concerns. In this paper, we argue that an application-customizable hybrid overlay is well suited to meet these challenges. To this end, we propose an architecture called scattercast that relies on a network of strategically located agents called ScatterCast proXies or SCXs. These agents collaboratively provide the broadcast service for a session. Clients locate a nearby SCX and tap into the session via that SCX. Scattercast constructs a hybrid overlay network composed of unicast links between SCXs that interconnect locally scoped multicast regions. Rather than define a single standardized service model for transmitting data on top of the overlay, scattercast builds a customizable transport framework that provides adaptability by leveraging application-defined semantics to drive the distribution of content. We demonstrate the ability of our architecture to provide efficient distribution via a set of simulation experiments. Finally, we present our experience with the adaptability of the framework by describing two applications, a real-time Internet radio and an online slide-presentation tool, both of which we have built on top of a prototype implementation of the architecture.
architecture        0.9999999064762094^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Software_architecture 

multicast                     0.9999997944876424^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multicast             

architecture                  0.9999999064762094^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Software_architecture 

hybrid                        0.9732700267765068^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Hybrid_vehicle        

semantics                     0.999999999665306^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Semantic_Web          

overlay network               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Overlay_network       

simulation                    0.9999669174637309^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Simulation            

IP multicast                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/IP_multicast          

unicast                       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Unicast               

Internet radio                0.9999999999990905^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Internet_radio        

Internet                      0.9999998467660707^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Internet_protocol_suite

hybrid                        0.9732700267765068^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Hybrid_vehicle        

architecture                  0.9999999064762094^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Software_architecture 

