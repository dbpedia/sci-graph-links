Abstract. XML database systems emerge as a result of the acceptance of the XML data model. Recent works have followed the promising approach of building XML database management systems on underlying RDBMSâ€™s. Achieving query processing performance reduces to two questions: (i) How should the XML data be decomposed into data that are stored in the RDBMS? (ii) How should the XML query be translated into an efficient plan that sends one or more SQL queries to the underlying RDBMS and combines the data into the XML result? We provide a formal framework for XML Schema-driven decompositions, which encompasses the decompositions proposed in prior work and extends them with decompositions that employ denormalized tables and binary-coded XML fragments. We provide corresponding query processing algorithms that translate the XML query conditions into conditions on the relational tables and assemble the decomposed data into the XML query result. Our key performance focus is the response time for delivering the first results of a query. The most effective of the described decompositions have been implemented in XCacheDB, an XML DBMS built on top of a commercial RDBMS, which serves as our experimental basis. We present experiments and analysis that point to a class of decompositions, called inlined decompositions, that improve query performance for full results and first results, without significant increase in the size of the database.
XML                 0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

XML                           0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

SQL                           0.999999997398163^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/SQL                   

XML                           0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

XML                           0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

algorithms                    0.9999999998997282^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

XML                           0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

database systems              0.9944309023940892^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Database              

database management systems   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Database              

XML                           0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

DBMS                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Database              

data model                    0.9999914496433504^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_model            

XML                           0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

XML                           0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

XML                           0.9999999481578938^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XML                   

denormalized                  0.9999997411079329^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Database_normalization

