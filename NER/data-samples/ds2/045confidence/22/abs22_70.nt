@prefix schema:   <http://schema.org/> .
@prefix dbpedia:   <http://dbpedia.org/ontology/> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix itsrdf: <http://www.w3.org/2005/11/its/rdf#> .
@prefix nif:   <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core#> .

<#offset_198_209>  a            nif:Phrase , nif:OffsetBasedString ;
        nif:anchorOf            "normal form" ;
        nif:beginIndex          "198"^^xsd:nonNegativeInteger ;
        nif:endIndex            "209"^^xsd:nonNegativeInteger ;
        nif:referenceContext    <#offset_0_357> ;
        itsrdf:taAnnotatorsRef  <http://model.dbpedia-spotlight.org> ;
        itsrdf:taConfidence     "0.9072253116407831"^^xsd:double ;
        itsrdf:taIdentRef       <http://dbpedia.org/resource/Database_normalization> .

<#offset_0_357>  a      nif:OffsetBasedString , nif:Context ;
        nif:beginIndex  "0"^^xsd:nonNegativeInteger ;
        nif:endIndex    "357"^^xsd:nonNegativeInteger ;
        nif:isString    "Abstract In this paper we deal with a generalization of the Quineâ€“McCluskey method. We show that the generalized method can find a normal form for any finite-valued logical function. Moreover, this normal form is simpler than that found by the intuitive method using the table of values. The method has been successfully implemented and tested on examples.\n" .

<#collection>  a        nif:ContextCollection ;
        nif:hasContext  <#offset_0_357> ;
        <http://purl.org/dc/terms/conformsTo>
                <http://persistence.uni-leipzig.org/nlp2rdf/ontologies/nif-core/2.1> .

<#offset_131_142>  a            nif:Phrase , nif:OffsetBasedString ;
        nif:anchorOf            "normal form" ;
        nif:beginIndex          "131"^^xsd:nonNegativeInteger ;
        nif:endIndex            "142"^^xsd:nonNegativeInteger ;
        nif:referenceContext    <#offset_0_357> ;
        itsrdf:taAnnotatorsRef  <http://model.dbpedia-spotlight.org> ;
        itsrdf:taConfidence     "0.9072253116407831"^^xsd:double ;
        itsrdf:taIdentRef       <http://dbpedia.org/resource/Database_normalization> .
