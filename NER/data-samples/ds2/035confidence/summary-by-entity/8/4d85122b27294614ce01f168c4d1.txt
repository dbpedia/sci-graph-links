Abstract It is shown that a compression of two-electron integrals and their indices significantly improves efficiency of the conventional self-consistent field (SCF) algorithm for a solution of the Hartree-Fock equation by decrease the Fock matrix calculation time. The improvement is reached not only due to a reduction of the integral file size, but mainly because data compression reduces or even can eliminate a cache conflict in data transfer from the hard drive to the main computer memory. Thus, the conventional SCF algorithm with the data compression becomes very efficient and permits to carry out large-scale Hartree-Fock calculations. The largest Hartree-Fock calculations have been performed for RNA 433D structure from the PDB data bank with 6080 basis functions formed from 6-31G basis on a workstation with 1 GHz Alpha processor.
GHz                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hertz                 

integral                      0.8539959115262281^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integer               

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

compression                   0.9901080677043^^http://www.w3.org/2001/XMLSchema#double              http://dbpedia.org/resource/Data_compression      

Alpha processor               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/DEC_Alpha             

PDB                           0.9999973847113871^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Protein_Data_Bank     

basis functions               0.9999999991873665^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Basis_set_(chemistry) 

RNA                           0.9999441397334341^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/RNA                   

data compression              0.9999939105912385^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_compression      

Fock matrix                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Fock_matrix           

Hartree-Fock                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hartree–Fock_method   

data compression              0.9999939105912385^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_compression      

Hartree-Fock                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hartree–Fock_method   

bank                          0.9994581905532381^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bank                  

hard drive                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hard_disk_drive       

cache                         0.5799466377440575^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/CPU_cache             

self-consistent field (SCF)   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hartree–Fock_method   

workstation                   0.9999057448279547^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Workstation           

SCF                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hartree–Fock_method   

computer memory               0.9775282959555704^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_data_storage 

integrals                     0.9999999987774117^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integral              

Hartree-Fock                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hartree–Fock_method   

