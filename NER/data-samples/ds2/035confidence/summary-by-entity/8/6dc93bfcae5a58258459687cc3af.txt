Abstract In the setting of secure multiparty computation, a set of mutually distrustful parties wish to securely compute some joint function of their private inputs. The computation should be carried out in a secure way, meaning that no coalition of corrupted parties should be able to learn more than specified or somehow cause the result to be “incorrect.” Typically, corrupted parties are either assumed to be semi-honest (meaning that they follow the protocol specification) or malicious (meaning that they may deviate arbitrarily from the protocol). However, in many settings, the assumption regarding semi-honest behavior does not suffice and security in the presence of malicious adversaries is excessive and expensive to achieve. In this paper, we introduce the notion of covert adversaries, which we believe faithfully models the adversarial behavior in many commercial, political, and social settings. Covert adversaries have the property that they may deviate arbitrarily from the protocol specification in an attempt to cheat, but do not wish to be “caught” doing so. We provide a definition of security for covert adversaries and show that it is possible to obtain highly efficient protocols that are secure against such adversaries. We stress that in our definition, we quantify over all (possibly malicious) adversaries and do not assume that the adversary behaves in any particular way. Rather, we guarantee that if an adversary deviates from the protocol in a way that would enable it to “cheat” (meaning that it can achieve something that is impossible in an ideal model where a trusted party is used to compute the function), then the honest parties are guaranteed to detect this cheating with good probability. We argue that this level of security is sufficient in many settings.
function            0.9999999701119582^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Function_(mathematics)

trusted party                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trusted_third_party   

specification                 0.9302892592699227^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Specification_(technical_standard)

coalition                     0.6173682698408464^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Coalition             

protocols                     0.997771036764651^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Communications_protocol

function                      0.9999999701119582^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Function_(mathematics)

specification                 0.9302892592699227^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Specification_(technical_standard)

protocol                      0.9978930968883517^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

cheating                      0.8435751595021432^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cheating_in_online_games

probability                   0.9999999998749445^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Probability           

protocol                      0.9978930968883517^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

computation                   0.9966381444228659^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computation           

protocol                      0.9978930968883517^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

covert                        0.9785364161136566^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Secrecy               

secure multiparty computation 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Secure_multi-party_computation

protocol                      0.9978930968883517^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

covert                        0.9785364161136566^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Secrecy               

stress                        0.9358459614732767^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Stress_(mechanics)    

