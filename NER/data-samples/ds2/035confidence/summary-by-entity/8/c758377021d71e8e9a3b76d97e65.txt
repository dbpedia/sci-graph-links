Abstract. We analyze the maximum throughput that known classes of reliable multicast transport protocols can attain. A new taxonomy of reliable multicast transport protocols is introduced based on the premise that the mechanisms used to release data at the source after correct delivery should be decoupled from the mechanisms used to pace the transmission of data and to effect error recovery. Receiver-initiated protocols, which are based entirely on negative acknowledgments (naks) sent from the receivers to the sender, have been proposed to avoid the implosion of acknowledgements (acks) to the source. However, these protocols are shown to require infinite buffers in order to prevent deadlocks. Two other solutions to the ack-implosion problem are tree-based protocols and ring-based protocols. The first organize the receivers in a tree and send acks along the tree; the latter send acks to the sender along a ring of receivers. These two classes of protocols are shown to operate correctly with finite buffers. It is shown that tree-based protocols constitute the most scalable class of all reliable multicast protocols proposed to date.
buffers             0.952605943014606^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Data_buffer           

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

taxonomy                      0.9888797343128752^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Taxonomy_(biology)    

buffers                       0.952605943014606^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Data_buffer           

acks                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transmission_Control_Protocol

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

acks                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transmission_Control_Protocol

acks                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transmission_Control_Protocol

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

reliable multicast            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Reliable_multicast    

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

infinite                      0.9995703279422002^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Infinity              

ring-based                    0.9967649178001159^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Ring_(computer_security)

reliable multicast            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Reliable_multicast    

transport                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transport_layer       

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

error recovery                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Error_detection_and_correction

finite                        0.8130332725146675^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Finite_set            

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

tree                          0.9968684104662082^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tree_structure        

transmission                  0.9999998092573787^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_transmission     

reliable multicast            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Reliable_multicast    

maximum throughput            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Throughput            

deadlocks                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Deadlock              

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

protocols                     0.9999999788916514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

ring                          0.9999739077151474^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Ring_(mathematics)    

transport                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transport_layer       

tree                          0.9968684104662082^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tree_structure        

