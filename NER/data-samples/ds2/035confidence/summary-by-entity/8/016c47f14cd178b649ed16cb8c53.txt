Abstract Ustaoglu presents a secure and efficient key exchange protocol named CMQV, based on the design rationales of HMQV and NAXOS. Compared with the latter two protocols, on one hand, CMQV achieves high performance of HMQV, and on the other, it is proven secure in eCK model as NAXOS is. However, CMQV enjoys the security proof under gap Diffie-Hellman assumption as indicated by its creators. In this paper, we propose a variant of CMQV, called CMQV+, which is proven secure under a weaker assumption (i.e. computational Diffie-Hellman assumption) in eCK model with random oracles while maintaining the high-performance feature of CMQV as much as possible.
NAXOS               0.9999999400571387^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Naxos_Records         

HMQV                          0.6525696908794549^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/HMQV                  

Diffie-Hellman                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Diffie–Hellman_key_exchange

NAXOS                         0.9999999400571387^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Naxos_Records         

protocol                      0.9825299639517429^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cryptographic_protocol

computational Diffie-Hellman assumption1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Computational_Diffie–Hellman_assumption

HMQV                          0.6525696908794549^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/HMQV                  

protocols                     0.982660138328516^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Cryptographic_protocol

key exchange                  0.9982630540342702^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Diffie–Hellman_key_exchange

random oracles                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Random_oracle         

proven secure                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Provable_security     

proven secure                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Provable_security     

