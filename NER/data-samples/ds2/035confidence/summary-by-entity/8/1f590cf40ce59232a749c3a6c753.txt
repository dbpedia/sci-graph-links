Abstract Traditional authentication systems used to protect access to online services are vulnerable by using various types of keyboard hacking tools at application-level and kernel-level. This study has been carried out for the purpose to secure keyboard input information at end to end area between the keyboard hardware and the computer main system. For this, we found out security vulnerabilities at kernel-level in accordance with the input information processing procedure by using risk analysis based technology methodology. To secure derived vulnerabilities we have designed a couple of detailed system components such as debug interrupt exception processing, ‘JUMP’ code insertion, keyboard input encryption and direct transmission. As the consequence of security evaluation on our proposed technologies, we have got experiment results better than literature studies in the confidentiality experiment and the comparison experiment (regarding authentication and access control) about various information invasion tools. We expect that our research would be able to contribute to follow-up study not only to prevent leaking about keyboard input information but also to secure important information in ubiquitous commerce applications.
kernel-level        0.9999936334544676^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Kernel_(computing)    

authentication                0.9999999991175628^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Authentication        

interrupt                     0.9999433983930132^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Interrupt             

vulnerabilities               0.962267303364309^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Vulnerability_(computing)

security vulnerabilities      0.9991492221844824^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vulnerability_(computing)

keyboard                      0.9999999998245812^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_keyboard     

technology                    0.9963551876040296^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Technology            

commerce                      0.9999999040430839^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/E-commerce            

keyboard                      0.9999999998245812^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_keyboard     

literature                    0.999998987835341^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Literature            

risk analysis                 0.7747438737603668^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Risk_management       

keyboard                      0.9999999998245812^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_keyboard     

hacking tools                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hacking_tool          

keyboard                      0.9999999998245812^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_keyboard     

kernel-level                  0.9999936334544676^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Kernel_(computing)    

computer                      0.999999148057008^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Computer              

transmission                  0.7408365224183618^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_transmission     

access control                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Access_control        

debug                         0.9999980876914473^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Debugging             

hardware                      0.9999861411774563^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_hardware     

confidentiality               0.9861198308665775^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Information_security  

encryption                    0.9994295458306901^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

keyboard                      0.9999999998245812^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_keyboard     

authentication                0.9999999991175628^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Authentication        

methodology                   0.9999999830465641^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Methodology           

