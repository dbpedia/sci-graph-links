Abstract Distributed top-k query processing is increasingly becoming an essential functionality in a large number of emerging application classes. This paper addresses the efficient algebraic optimization of top-k queries in wide-area distributed data repositories where the index lists for the attribute values (or text terms) of a query are distributed across a number of data peers and the computational costs include network latency, bandwidth consumption, and local peer work. We use a dynamic programming approach to find the optimal execution plan using compact data synopses for selectivity estimation that is the basis for our cost model. The optimized query is executed in a hierarchical way involving a small and fixed number of communication phases. We have performed experiments on real web data that show the benefits of distributed top-k query optimization both in network resource consumption and query response time.
network             0.9999930302371521^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_network      

bandwidth                     0.9998767074826443^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bandwidth_(computing) 

algebraic                     0.6187805179993351^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Abstract_algebra      

communication                 0.9991089615275214^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Inter-process_communication

network latency               0.9999995919727931^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Latency_(engineering) 

dynamic programming           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Dynamic_programming   

repositories                  0.9571633300064026^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Digital_library       

optimization                  0.9947597346490693^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

query optimization            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Query_optimization    

compact                       0.9982714943601835^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Compact_space         

consumption                   0.9996290108446013^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Consumption_(economics)

hierarchical                  0.9999998297111151^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_topology      

consumption                   0.9996290108446013^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Consumption_(economics)

query processing              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Query_optimization    

selectivity                   0.7725429467316643^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Selectivity_(electronic)

