Abstract Architectural decisions have emerged as a means to maintain the quality of the architecture during its evolution. One of the most important decisions made by architects are those about the design approach such as the use of patterns or styles in the architecture. The structural nature of this type of decisions give them the potential to be controlled systematically. In the literature, there are some works on the automation of architectural decision violation checking. In this paper we show that these works do not allow to detect all possible architectural decision violations. To solve this problem we propose an approach which: (i) describes architectural patterns that hold the architectural decision definition, (ii) integrates architectural decisions into an architectural model and, (iii) automates the architectural decision conformance checking. The approach is implemented using Eclipse modeling framework and its accompanying technologies. Starting from well-known architectural patterns, we show that we can formalize all those related to the structural aspect. Through two evaluations, we show that our approach can be adapted to different architecture paradigms and allows to detect more violations comparing to the existing approaches.
Eclipse modeling framework1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Eclipse_Modeling_Framework

architectural model           0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Architectural_model   

architecture                  0.9999954846776595^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Software_architecture 

architecture                  0.9999954846776595^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Software_architecture 

architecture                  0.9999954846776595^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Software_architecture 

automation                    0.9336836660119728^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Automation            

literature                    0.9997224493850274^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Literature            

architects                    0.9999999797248622^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Software_architecture 

architectural patterns        0.9999196651784952^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Design_pattern        

evolution                     0.9999987742913399^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Evolution             

paradigms                     0.7194891522027057^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Paradigm              

architectural patterns        0.9999196651784952^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Design_pattern        

