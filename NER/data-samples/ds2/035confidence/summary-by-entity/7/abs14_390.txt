Abstract We propose a sequential learning policy for ranking and selection problems, where we use a non-parametric procedure for estimating the value of a policy. Our estimation approach aggregates over a set of kernel functions in order to achieve a more consistent estimator. Each element in the kernel estimation set uses a different bandwidth to achieve better aggregation. The final estimate uses a weighting scheme with the inverse mean square errors of the kernel estimators as weights. This weighting scheme is shown to be optimal under independent kernel estimators. For choosing the measurement, we employ the knowledge gradient policy that relies on predictive distributions to calculate the optimal sampling point. Our method allows a setting where the beliefs are expected to be correlated but the correlation structure is unknown beforehand. Moreover, the proposed policy is shown to be asymptotically optimal.
kernel functions    0.963193823825046^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Kernel_(statistics)   

inverse                       0.9961654290287251^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Invertible_matrix     

kernel estimation             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Kernel_(statistics)   

estimators                    0.9699847648807317^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Estimator             

estimator                     0.7550160102545648^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Estimator             

asymptotically optimal        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Asymptotically_optimal_algorithm

gradient                      0.9919190779164361^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Gradient_descent      

kernel                        0.999994069441719^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Kernel_(statistics)   

kernel                        0.999994069441719^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Kernel_(statistics)   

independent                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Independence_(probability_theory)

sampling                      0.999275627876829^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Sampling_(statistics) 

bandwidth                     0.6459337588164621^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bandwidth_(signal_processing)

correlation                   0.9937183104761295^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Correlation_and_dependence

estimators                    0.9699847648807317^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Estimator             

aggregates                    0.5138374900345071^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Aggregate_data        

non-parametric                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Non-parametric_statistics

