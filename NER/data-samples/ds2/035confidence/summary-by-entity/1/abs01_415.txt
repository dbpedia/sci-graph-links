Abstract In this paper, self-adaptive differential evolution (DE) is enhanced by incorporating the JADE mutation strategy and hybridized with modified multi-trajectory search (MMTS) algorithm (SaDE-MMTS) to solve large-scale continuous optimization problems. The JADE mutation strategy, the “DE/current-to-pbest” which is a variation of the classic “DE/current-to-best”, is used for generating mutant vectors. After the mutation phase, the binomial (uniform) crossover, the exponential crossover as well as no crossover option are used to generate each pair of target and trial vectors. By utilizing the self-adaptation in SaDE, both trial vector generation strategies and their associated control parameter values are gradually self-adapted by learning from their previous experiences in generating promising solutions. Consequently, suitable offspring generation strategy along with associated parameter settings will be determined adaptively to match different phases of the search process. MMTS is applied frequently to refine several diversely distributed solutions at different search stages satisfying both the global and the local search requirement. The initialization of step sizes is also defined by a self-adaption during every MMTS step. The success rates of both SaDE and the MMTS are determined and compared; consequently, future function evaluations for both search algorithms are assigned proportionally to their recent past performance. The proposed SaDE-MMTS is employed to solve the 19 numerical optimization problems in special issue of soft computing on scalability of evolutionary algorithms for large-scale continuous optimization problems and competitive results are presented.
SaDE                0.5972371183760063^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Marquis_de_Sade       

exponential                   0.8765788328761871^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exponential_function  

evolutionary algorithms       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Evolutionary_algorithm

local search                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Local_search_(optimization)

scalability                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Scalability           

SaDE                          0.5972371183760063^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Marquis_de_Sade       

continuous optimization       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Continuous_optimization

crossover                     0.9999999918273943^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Crossover_(genetic_algorithm)

MMTS                          0.9998458352681701^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multi-Modal_Transport_System_(Hyderabad)

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

MMTS                          0.9998458352681701^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multi-Modal_Transport_System_(Hyderabad)

vectors                       0.4831042770483882^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vector_space          

function                      0.9999999991740651^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Function_(mathematics)

DE                            0.5408579619534426^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Germany               

vectors                       0.4831042770483882^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vector_space          

offspring                     0.9916849002818451^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Offspring             

search algorithms             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Search_algorithm      

soft computing                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Soft_computing        

DE                            0.5408579619534426^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Germany               

mutation                      0.9975288409907227^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mutation              

mutation                      0.9975288409907227^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mutation              

MMTS                          0.9998458352681701^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multi-Modal_Transport_System_(Hyderabad)

crossover                     0.9999999918273943^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Crossover_(genetic_algorithm)

hybridized                    0.9999849815810651^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Nucleic_acid_thermodynamics

numerical optimization        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Mathematical_optimization

JADE                          0.6319181312249892^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/JADE_(particle_detector)

differential evolution        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Differential_evolution

MMTS                          0.9998458352681701^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multi-Modal_Transport_System_(Hyderabad)

mutant                        0.9999999980690291^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mutation              

proportionally                0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Proportionality_(mathematics)

continuous optimization       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Continuous_optimization

binomial                      0.9999999999558895^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Binomial_distribution 

mutation                      0.9975288409907227^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mutation              

vector                        0.9229391674510841^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Array_data_structure  

DE                            0.5408579619534426^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Germany               

crossover                     0.9999999918273943^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Crossover_(genetic_algorithm)

JADE                          0.6319181312249892^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/JADE_(particle_detector)

