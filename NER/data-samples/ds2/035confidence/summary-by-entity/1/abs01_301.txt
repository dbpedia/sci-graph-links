Abstract In this paper, we employ a numerical algorithm to solve first-order hybrid fuzzy differential equation (HFDE) based on the high order Runge–Kutta method. It is assumed that the user will evaluate both $$f$$ f and $$f'$$ f′ readily, instead of the evaluations of $$f$$ f only when solving the HFDE. We present a $$O(h^4)$$ O(h4) method that requires only three evaluations of $$f$$ f . Moreover, we consider the characterization theorem of Bede to solve the HFDE numerically. The convergence of the method will be proven and numerical examples are shown with a comparison to the conventional solutions.
Runge–Kutta method  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Runge–Kutta_methods   

first-order                   0.9678620965110105^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Ordinary_differential_equation

convergence                   0.73383016511808^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Limit_(mathematics)   

theorem                       0.999999983778821^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Theorem               

differential equation         0.9088446958658644^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Differential_equation 

hybrid                        0.8414815361369014^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Hybrid_algorithm      

h4                            0.9979500254015873^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Histone_H4            

numerical algorithm           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Numerical_analysis    

Bede                          0.9999859985447533^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bede                  

