Abstract Efficient reconciliation is a crucial step in continuous variable quantum key distribution. The progressive-edge-growth (PEG) algorithm is an efficient method to construct relatively short block length low-density parity-check (LDPC) codes. The qua-sicyclic construction method can extend short block length codes and further eliminate the shortest cycle. In this paper, by combining the PEG algorithm and qua-si-cyclic construction method, we design long block length irregular LDPC codes with high error-correcting capacity. Based on these LDPC codes, we achieve high-efficiency Gaussian key reconciliation with slice recon-ciliation based on multilevel coding/multistage decoding with an efficiency of 93.7ï¿½prefix=
low-density parity-check (LDPC) codes1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Low-density_parity-check_code

multistage                    0.9999999999852207^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multistage_rocket     

LDPC codes                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Low-density_parity-check_code

LDPC codes                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Low-density_parity-check_code

prefix                        0.9956688155850246^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Prefix                

continuous variable           0.9997986589718114^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Probability_distribution

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

Gaussian                      0.9982496145764674^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Normal_distribution   

PEG                           0.9673886629852655^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Polyethylene_glycol   

PEG                           0.9673886629852655^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Polyethylene_glycol   

quantum key distribution      0.9982831690063548^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Quantum_key_distribution

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

