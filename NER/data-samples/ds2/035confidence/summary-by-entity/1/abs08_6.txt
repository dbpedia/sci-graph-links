Abstract Trust management in a networked environment consists of authentication and integrity checking. In a mobile computing environment, both remote hosts and mobile code are suspect. We present a model that addresses trust negotiation between the remote host and the mobile code simultaneously. Our model uses tamper resistant hardware, public key cryptography, and one-way hash functions.
mobile code         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Mobile_code           

mobile code                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Mobile_code           

hardware                      0.9999998453636869^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_hardware     

trust                         0.9961070436009108^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Trust_(social_sciences)

tamper resistant              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Tamper_resistance     

authentication                0.9999960125660354^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Authentication        

hash functions                0.9000771800177698^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cryptographic_hash_function

mobile computing              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Mobile_computing      

public key cryptography       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Public-key_cryptography

