Abstract The numerical solution of the three-dimensional Poisson equation with Dirichlet boundary conditions, which is of importance for a wide field of applications in Computational Physics and Theoretical Chemistry is considered using the method of finite elements for a model problem. The direct, the iterative and the factorized direct methods for solving the corresponding linear system of equations are discussed and implemented in the scripting language Python http://www.python.org making use of the numpy http://www.numpy.org and pysparse http://pysparse.sourceforge.net extensions. The relative performance of the different approaches is compared and it is shown, that the factorized direct method is vastly superior for larger problem sizes. A formalism for implementing the Dirichlet boundary conditions in the factorization approach is derived and presented in some detail, since it is to the best of our knowledge new.
scripting language  0.9999987272101549^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Scripting_language    

factorization                 0.9637179354385343^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integer_factorization 

direct method                 0.9999999675977739^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Direct_method_in_the_calculus_of_variations

Theoretical Chemistry         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Theoretical_chemistry 

relative performance          0.9999876494222086^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Relative_return       

Dirichlet boundary conditions 0.7560386862270789^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Dirichlet_boundary_condition

factorized                    0.7229701649524093^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Factorization         

factorized                    0.7229701649524093^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Factorization         

Dirichlet boundary conditions 0.7560386862270789^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Dirichlet_boundary_condition

Computational Physics         0.999957523376163^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/computational_physics 

iterative                     0.9999896024069671^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Iterative_method      

numpy                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/NumPy                 

linear system                 0.9999874291559094^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/System_of_linear_equations

formalism                     0.9818536471543517^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Formal_system         

Python                        0.9999998374427282^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Python_(programming_language)

three-dimensional             0.9999910690918108^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Dimension_(mathematics_and_physics)

finite elements               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Finite_element_method 

numerical solution            0.9999089298858714^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Numerical_analysis    

direct methods                0.9999430068667554^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Direct_method_in_the_calculus_of_variations

Poisson equation              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Poisson's_equation    

