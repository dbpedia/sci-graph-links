Abstract We study the problem of designing kinetic data structures (KDS’s for short) when event times cannot be computed exactly and events may be processed in a wrong order. In traditional KDS’s this can lead to major inconsistencies from which the KDS cannot recover. We present more robust KDS’s for the maintenance of several fundamental structures such as kinetic sorting and kinetic tournament trees, which overcome the difficulty by employing a refined event scheduling and processing technique. We prove that the new event scheduling mechanism leads to a KDS that is correct except for finitely many short time intervals. We analyze the maximum delay of events and the maximum error in the structure, and we experimentally compare our approach to the standard event scheduling mechanism.
scheduling          0.999997221275289^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Scheduling_(computing)

scheduling                    0.999997221275289^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Scheduling_(computing)

scheduling                    0.999997221275289^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Scheduling_(computing)

kinetic tournament            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Kinetic_tournament    

kinetic data structures       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Kinetic_data_structure

