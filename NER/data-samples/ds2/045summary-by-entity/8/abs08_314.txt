Abstract. The publish/subscribe paradigm is a popular model for allowing publishers (i.e., data generators) to selectively disseminate data to a large number of widely dispersed subscribers (i.e., data consumers) who have registered their interest in specific information items. Early publish/subscribe systems have typically relied on simple subscription mechanisms, such as keyword or ”bag of words” matching, or simple comparison predicates on attribute values. The emergence of XML as a standard for information exchange on the Internet has led to an increased interest in using more expressive subscription mechanisms (e.g., based on XPath expressions) that exploit both the structure and the content of published XML documents. Given the increased complexity of these new data-filtering mechanisms, the problem of effectively identifying the subscription profiles that match an incoming XML document poses a difficult and important research challenge. In this paper, we propose a novel index structure, termed XTrie, that supports the efficient filtering of XML documents based on XPath expressions. Our XTrie index structure offers several novel features that, we believe, make it especially attractive for large-scale publish/subscribe systems. First, XTrie is designed to support effective filtering based on complex XPath expressions (as opposed to simple, single-path specifications). Second, our XTrie structure and algorithms are designed to support both ordered and unordered matching of XML data. Third, by indexing on sequences of elements organized in a trie structure and using a sophisticated matching algorithm, XTrie is able to both reduce the number of unnecessary index probes as well as avoid redundant matchings, thereby providing extremely efficient filtering. Our experimental results over a wide range of XML document and XPath expression workloads demonstrate that our XTrie index structure outperforms earlier approaches by wide margins.
XML                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

publish/subscribe             0.999999940051568^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Publish–subscribe_pattern

algorithms                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

XML                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

publish/subscribe             0.999999940051568^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Publish–subscribe_pattern

XPath                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XPath                 

XML                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

matchings                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Matching_(graph_theory)

Internet                      0.6757029357077318^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Internet              

XML                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

XPath                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XPath                 

XPath                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XPath                 

predicates                    0.9846753678409771^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/First-order_logic     

publish/subscribe             0.999999940051568^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Publish–subscribe_pattern

trie                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trie                  

XML                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

XPath                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XPath                 

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

XML                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

