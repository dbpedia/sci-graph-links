Abstract A key aspect of engineering secure systems is identifying adequate security requirements to protect critical assets from harm. However, security requirements may compete with other requirements such as cost and usability. For this reason, they may only be satisfied partially and must be traded off against other requirements to achieve “good-enough security”. This paper proposes a novel approach to automate security requirements analysis in order to determine maximum achievable satisfaction level for security requirements and identify trade-offs between security and other requirements. We also propose a pruning algorithm to reduce the search space size in the analysis. We represent security concerns and requirements using asset, threat, and goal models, initially proposed in our previous work. To deal with uncertainty and partial requirements, satisfaction security concerns are quantified by leveraging the notion of composite indicators, which are computed through metric functions based on range normalisation. An SMT solver (Z3) interprets the models and automates the execution of our analyses. We illustrate and evaluate our approach by applying it to a substantive example of a service-based application for exchanging emails.
requirements analysis1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Requirements_analysis 

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

pruning                       0.9749198713948137^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Pruning               

usability                     0.999999997517989^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Usability             

SMT                           0.999972377088384^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Satisfiability_Modulo_Theories

metric                        0.9999752269942671^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Metric_(mathematics)  

Z3                            0.9996776295020353^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Z3_(computer)         

search space                  0.9990565945612149^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Search_algorithm      

