Abstract The principle ideas of this paper are based on the uncontested statement that in the near future more and more dedicated hardware devices will be in use in addition to the general central processing unit. For reasons of performance it is desired to use algorithms which allow parallelism. In our particular case we discuss a scatter storage technique and describe appropriate parallel methods for most of the common collision strategies. The methods are based on a possible partition of the range of the tableaddresses 0≦a≦N−1. However, in addition, we present a simple and easily implemented quadratic residue search which in itself can be used as a conventional sequential method. This algorithm is deduced from classical lemmas on the theory of quadratic residues for primes of the form 8m±3.
quadratic residues  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Quadratic_residue     

quadratic residue             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Quadratic_residue     

parallelism                   0.999999997910777^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Parallel_computing    

central processing unit       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Central_processing_unit

lemmas                        0.9999998425510181^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Lemma_(mathematics)   

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

algorithms                    0.9999983885881443^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

classical                     0.9988722751394437^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Classical_mechanics   

partition                     0.9985351242651027^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Partition_of_a_set    

