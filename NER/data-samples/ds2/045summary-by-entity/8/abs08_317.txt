Abstract. In this paper, we propose a new tunable index scheme, called iMinMax($\theta$), that maps points in high-dimensional spaces to single-dimensional values determined by their maximum or minimum values among all dimensions. By varying the tuning “knob”, $\theta$, we can obtain different families of iMinMax structures that are optimized for different distributions of data sets. The transformed data can then be indexed using existing single-dimensional indexing structures such as the B + -trees. Queries in the high-dimensional space have to be transformed into queries in the single-dimensional space and evaluated there. We present efficient algorithms for evaluating window queries as range queries on the single-dimensional space. We conducted an extensive performance study to evaluate the effectiveness of the proposed schemes. Our results show that iMinMax($\theta$) outperforms existing techniques, including the Pyramid scheme and VA-file, by a wide margin. We then describe how iMinMax could be used in approximate K-nearest neighbor (KNN) search, and we present a comparative study against the recently proposed iDistance, a specialized KNN indexing method.
algorithms          0.8574423564910998^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

KNN                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/K-nearest_neighbors_algorithm

tuning                        0.9999665532359521^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Musical_tuning        

Pyramid scheme                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Pyramid_scheme        

KNN                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/K-nearest_neighbors_algorithm

high-dimensional spaces       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Dimension_(mathematics_and_physics)

