Abstract We investigate operating system noise, which we identify as one of the main reasons for a lack of synchronicity in parallel applications. Using a microbenchmark, we measure the noise on several contemporary platforms and find that, even with a general-purpose operating system, noise can be limited if certain precautions are taken. We then inject artificially generated noise into a massively parallel system and measure its influence on the performance of collective operations. Our experiments indicate that on extreme-scale platforms, the performance is correlated with the largest interruption to the application, even if the probability of such an interruption on a single process is extremely small. We demonstrate that synchronizing the noise can significantly reduce its negative influence.
synchronicity       0.9999999996632596^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Synchronicity         

operating system              0.9999998661041422^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Operating_system      

operating system              0.9999998661041422^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Operating_system      

massively parallel            0.9999962148761496^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Massively_parallel_(computing)

probability                   0.9689947414052115^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Probability           

