Abstract This paper enhances a well-known dynamic portfolio management algorithm, the BGSS algorithm, proposed by Brandt et al. (Review of Financial Studies, 18(3):831–873, 2005). We equip this algorithm with the components from a recently developed method, the Stochastic Grid Bundling Method (SGBM), for calculating conditional expectations. When solving the first-order conditions for a portfolio optimum, we implement a Taylor series expansion based on a nonlinear decomposition to approximate the utility functions. In the numerical tests, we show that our algorithm is accurate and robust in approximating the optimal investment strategies, which are generated by a new benchmark approach based on the COS method (Fang and Oosterlee, in SIAM Journal of Scientific Computing, 31(2):826–848, 2008).
investment          0.9999999919318725^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Investment            

Stochastic                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Stochastic            

utility functions             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Utility               

nonlinear                     0.9998283131100568^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Nonlinear_system      

portfolio management          0.9999990299634349^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Investment_management 

Taylor series                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Taylor_series         

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

portfolio                     0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Portfolio_(finance)   

SIAM                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Society_for_Industrial_and_Applied_Mathematics

COS                           0.51223156707289^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Chief_of_staff        

benchmark                     0.9672908438912003^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Benchmarking          

decomposition                 0.9999999999976126^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Variance              

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

Fang                          0.8791053837041766^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Beti-Pahuin_peoples   

first-order conditions        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/First_derivative_test 

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

conditional expectations      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Conditional_expectation

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

