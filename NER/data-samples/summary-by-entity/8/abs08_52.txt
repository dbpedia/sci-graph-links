Abstract In this paper, we present a path-following infeasible interior-point method for $$P_*(\kappa )$$ P∗(κ) horizontal linear complementarity problems ($$P_*(\kappa )$$ P∗(κ) -HLCPs). The algorithm is based on a simple kernel function for finding the search directions and defining the neighborhood of the central path. The algorithm follows the central path related to some perturbations of the original problem, using the so-called feasibility and centering steps, along with only full such steps. Therefore, it has the advantage that the calculation of the step sizes at each iteration is avoided. The complexity result shows that the full-Newton step infeasible interior-point algorithm based on the simple kernel function enjoys the best-known iteration complexity for $$P_*(\kappa )$$ P∗(κ) -HLCPs.
algorithm           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

perturbations                 0.9999940071157829^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Perturbation_theory   

kappa                         0.7068432137872462^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cohen's_kappa         

neighborhood                  0.9994680146356633^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Neighbourhood_(mathematics)

linear complementarity problems1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Linear_complementarity_problem

iteration                     0.9998776864547148^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Iterative_method      

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

kappa                         0.7068432137872462^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cohen's_kappa         

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

kernel function               0.99578429453887^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Positive-definite_kernel

interior-point method         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Interior_point_method 

iteration                     0.9998776864547148^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Iterative_method      

kappa                         0.7068432137872462^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cohen's_kappa         

kernel function               0.99578429453887^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Positive-definite_kernel

