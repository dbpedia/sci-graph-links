Abstract Bat algorithm (BA) is a new approach designed by imitating batâ€™s behavior of searching and capturing preys. The existing results have demonstrated the effectiveness and efficiency in comparison with other heuristic algorithms such as genetic algorithms and particle swarm optimization. In this paper, we design a novel framework for bat algorithm named two-stage bat algorithm (TSBA) using a trade-off strategy which balances the relationship between exploration and exploitation at the most extent. Inspired by the multi-population methods (e.g., artificial bee colony), we not only concern some technologies to avoid premature inevitably encountered when using BA, but also use a trade-off strategy to improve the comprehensive search performance for optimization. Some typical test sets which consist of 27 benchmark functions are utilized in comparative experiment, and the simulation results in terms of convergence rate and accuracy illustrate that the TSBA has a competitive performance than other swarm intelligent optimization algorithms. In addition, the proposed algorithm will not lend to the tremendous increase in computing time and thus will be a powerful tool in practical applications.
optimization        0.9999638624434111^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

swarm                         0.9999999989653361^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Swarm_intelligence    

genetic algorithms            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Genetic_algorithm     

bat algorithm                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Bat_algorithm         

trade-off                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trade-off             

benchmark                     0.9245032290987026^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Benchmarking          

BA                            0.7759710271638613^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bachelor_of_Arts      

computing                     0.9996642535367999^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computation           

Bat algorithm                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Bat_algorithm         

colony                        0.9997922755695213^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Ant_colony            

convergence rate              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Rate_of_convergence   

algorithms                    0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

bat                           0.9999760256053961^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bat                   

exploitation                  0.7046269247437661^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exploitation          

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

BA                            0.7759710271638613^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bachelor_of_Arts      

particle swarm optimization   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Particle_swarm_optimization

heuristic algorithms          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Heuristic_(computer_science)

trade-off                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trade-off             

bat algorithm                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Bat_algorithm         

simulation                    0.9998424018953613^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_simulation   

optimization                  0.9999638624434111^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

bee                           0.6171979618696982^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Honey_bee             

