Abstract Attribute based encryption (ABE) has been widely applied for secure data protection in various data sharing systems. However, the efficiency of existing ABE schemes is not high enough since running encrypt and decrypt algorithms need frequent bilinear pairing operations, which may occupy too much computing resources on terminal devices. What’s more, since different users may share the same attributes in the system, a single user’s private key exposure will threaten the security and confidentiality of the whole system. Therefore, to further decrease the computation cost in attribute based cryptosystem as well as provide secure protection when key exposure happens, in this paper, we firstly propose a high efficient key-insulated ABE algorithm without pairings. The key-insulated mechanism guarantees both forward security and backward security when key exposure or user revocation happens. Besides, during the running of algorithms in our scheme, users and attribute authority needn’t run any bilinear pairing operations, which will increase the efficiency to a large extent. The high efficiency and security analysis indicate that our scheme is more appropriate for secure protection in data sharing systems.
algorithms          0.9999931294448298^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

cryptosystem                  0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cryptosystem          

data protection               0.9965379920209106^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Privacy               

terminal                      0.9682976074696861^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_terminal     

private key                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Public-key_cryptography

bilinear pairing              0.999925009229305^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Pairing               

ABE                           0.9805646957451992^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/AbeBooks              

security analysis             0.9999999993568736^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Security_analysis     

bilinear pairing              0.999925009229305^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Pairing               

single                        0.988896747624495^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Single_(music)        

algorithms                    0.9999931294448298^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

ABE                           0.9805646957451992^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/AbeBooks              

confidentiality               0.9999999434115823^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Confidentiality       

decrypt                       0.999999977429866^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Encryption            

computation                   0.7466495601797624^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computing             

ABE                           0.9805646957451992^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/AbeBooks              

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

computing                     0.974190653211858^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Computing             

encryption                    0.999231050680606^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Encryption            

encrypt                       0.99115547676463^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Encryption            

