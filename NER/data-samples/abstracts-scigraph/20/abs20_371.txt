Abstract This article discusses the programming language LISP. The language was created by John McCarthy for an artificial intelligence application. LISP was the first functional language based on a mathematical theory of computation. It has been standardized and is still used fairly widely. The language also had a huge influence on later languages. Its implementation introduced interpreted languages, source-level debugging and garbage collection. These facilities are a common denominator for many languages today. We discuss the mathematical foundations of LISP the interpreter and briefly touch on its influence on other languages and its status today.