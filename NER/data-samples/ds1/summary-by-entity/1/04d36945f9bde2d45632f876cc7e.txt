Abstract In cell traction microscopy, the mechanical forces exerted by a cell on its environment is usually determined from experimentally measured displacement by solving an inverse problem in elasticity. In this paper, an innovative numerical method is proposed which finds the “optimal” traction to the inverse problem. When sufficient regularization is applied, we demonstrate that the proposed method significantly improves the widely used approach using Green’s functions. Motivated by real cell experiments, the equilibrium condition of a slowly migrating cell is imposed as a set of equality constraints on the unknown traction. Our validation benchmarks demonstrate that the numeric solution to the constrained inverse problem well recovers the actual traction when the optimal regularization parameter is used. The proposed method can thus be applied to study general force sensing problems, which utilize displacement measurements to sense inaccessible forces in linear elastic bodies with a priori constraints.
displacement        0.9148803991801588^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Displacement_(vector) 

cell                          0.9999999635076626^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cell_(biology)        

equilibrium                   0.9849013248714397^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mechanical_equilibrium

equality                      0.9998860209990766^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Equality_(mathematics)

cell                          0.9999999635076626^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cell_(biology)        

benchmarks                    0.9978330025599269^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Benchmarking          

elasticity                    0.7893762076024072^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Linear_elasticity     

microscopy                    0.9939502506524751^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Microscopy            

traction                      0.9999999999979536^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Stress_(mechanics)    

cell                          0.9999999635076626^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cell_(biology)        

inverse problem               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Inverse_problem       

linear elastic                0.9996987363044891^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Linear_elasticity     

inverse problem               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Inverse_problem       

inverse problem               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Inverse_problem       

force                         0.9999999999229203^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Force                 

regularization                0.999998929480289^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Regularization_(mathematics)

cell                          0.9999999635076626^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cell_(biology)        

traction                      0.9999999999979536^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Stress_(mechanics)    

traction                      0.9999999999979536^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Stress_(mechanics)    

regularization parameter      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Regularization_(mathematics)

traction                      0.9999999999979536^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Stress_(mechanics)    

displacement                  0.9148803991801588^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Displacement_(vector) 

numerical method              0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Numerical_analysis    

