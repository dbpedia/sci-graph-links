Component deployment is a combinatorial optimisation problem in software engineering that aims at finding the best allocation of software components to hardware resources in order to optimise quality attributes, such as reliability. The problem is often constrained because of the limited hardware resources, and the communication network, which may connect only certain resources. Owing to the non‐linear nature of the reliability function, current optimisation methods have focused mainly on heuristic or metaheuristic algorithms. These are approximate methods, which find near‐optimal solutions in a reasonable amount of time. In this paper, we present a mixed integer linear programming (MILP) formulation of the component deployment problem. We design a set of experiments where we compare the MILP solver to methods previously used to solve this problem. Results show that the MILP solver is efficient in finding feasible solutions even where other methods fail, or prove infeasibility where feasible solutions do not exist.
communication network1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Telecommunications_network

reliability function          0.9999963294827983^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/survival_function     

software engineering          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Software_engineering  

algorithms                    0.999999999971692^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Algorithm             

quality attributes            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Non-functional_requirement

feasible solutions            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Candidate_solution    

metaheuristic                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Metaheuristic         

hardware                      0.9999998166639611^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_hardware     

software components           0.8049100368157162^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Modularity            

feasible solutions            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Candidate_solution    

combinatorial optimisation    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Combinatorial_optimization

heuristic                     0.8910986086778947^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Metaheuristic         

approximate methods           0.9999999816102447^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Numerical_analysis    

hardware                      0.9999998166639611^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_hardware     

mixed integer linear programming1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Linear_programming    

