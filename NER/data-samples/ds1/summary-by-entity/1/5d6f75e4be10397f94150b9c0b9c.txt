Abstract In this paper, an efficient local search framework, namely GRASP-PVC, is proposed to solve the minimum partial vertex cover problem. In order to speed up the convergence, a novel least-cost vertex selecting strategy is applied into GRASP-PVC. As far as we know, no heuristic algorithms have ever been reported to solve this momentous problem and we compare GRASP-PVC with a commercial integer programming solver CPLEX as well as a 2-approximation algorithm on two standard benchmark libraries called DIMACS and BHOSLIB. Experimental results evince that GRASP-PVC finds much better partial vertex covers than CPLEX and the approximation algorithm on most instances. Additional experimental results also confirm the validity of the least-cost vertex selecting strategy.
CPLEX               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/CPLEX                 

approximation algorithm       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Approximation_algorithm

evince                        0.9999999964654762^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Evince                

vertex                        0.9938912127004228^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vertex_(graph_theory) 

approximation algorithm       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Approximation_algorithm

vertex cover problem          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Vertex_cover          

local search                  0.9999999983302814^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Local_search_(optimization)

integer programming           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Integer_programming   

CPLEX                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/CPLEX                 

vertex                        0.9938912127004228^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vertex_(graph_theory) 

convergence                   0.9443616773030107^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Rate_of_convergence   

heuristic algorithms          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Heuristic_(computer_science)

DIMACS                        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/DIMACS                

vertex covers                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Vertex_cover          

benchmark                     0.9985349835079999^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Benchmark_(computing) 

libraries                     0.999999999962256^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Library_(computing)   

