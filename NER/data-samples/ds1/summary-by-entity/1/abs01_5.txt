Abstract Satisfiability Modulo Theories (SMT) have been widely investigated over the last decade. Recently researchers have extended SMT to the optimization problem over linear arithmetic constraints. To the best of our knowledge, Symba and OPT-MathSAT are two most efficient solvers available for this problem. The key algorithms used by Symba and OPT-MathSAT consist of the loop of two procedures: 1) critical finding for detecting a critical point, which is very likely to be globally optimal, and 2) global checking for confirming the critical point is really globally optimal. In this paper, we propose a new approach based on the Simplex method widely used in operation research. Our fundamental idea is to find several critical points by constructing and solving a series of linear problems with the Simplex method. Our approach replaces the algorithms of critical finding in Symba and OPT-MathSAT, and reduces the runtime of critical finding and decreases the number of executions of global checking. The correctness of our approach is proved. The experiment evaluates our implementation against Symba and OPT-MathSAT on a critical class of problems in real-time systems. Our approach outperforms Symba on 99.6ï¿½f benchmarks and is superior to OPT-MathSAT in large-scale cases where the number of tasks is more than 24. The experimental results demonstrate that our approach has great potential and competitiveness for the optimization problem.
algorithms          0.9999999977667358^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

solvers                       0.9999989782973661^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Solver                

critical point                0.9999999236345076^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Calculus_of_variations

critical point                0.9999999236345076^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Calculus_of_variations

optimization problem          0.9970759151173828^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

linear                        0.9999905861119217^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Time_complexity       

Simplex                       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Simplex_algorithm     

SMT                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Satisfiability_Modulo_Theories

SMT                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Satisfiability_Modulo_Theories

optimization problem          0.9970759151173828^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

real-time systems             0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Real-time_computing   

benchmarks                    0.9979550601543861^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Benchmark_(computing) 

Simplex                       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Simplex_algorithm     

loop                          0.9999999999258762^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Control_flow          

runtime                       0.9999999996575752^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Run_time_(program_lifecycle_phase)

Satisfiability Modulo Theories1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Satisfiability_Modulo_Theories

linear arithmetic             0.999987098382811^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Linear_arithmetic     

critical points               0.9999330874024092^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Critical_point_(mathematics)

competitiveness               0.9852963027692454^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Competitive_analysis_(online_algorithm)

algorithms                    0.9999999977667358^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

