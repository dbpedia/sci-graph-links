Abstract Identifying critical nodes in complex networks aims to fragment a graph $$G = (V, E)$$ G=(V,E) by removing a set of vertices R with cardinality $$\left| R \right| \le $$ Râ‰¤ k, such that the residual graph has minimum pairwise connectivity. Existing optimization algorithms are incapable of finding a good set R in complex networks. By investigating the role of nodes, a minimum dominating set approach is considered in controlling a network. This paper presents an algorithmic procedure to compute the critical nodes using a novel minimum connected dominating set, in which the critical nodes are identified based on the number of close subsequences. Through experimental verification on some randomly generated networks and comparing with the similar algorithms, the results showed that the proposed algorithm has high capability of identifying the critical nodes and low time complexity.
cardinality         0.9970431591332493^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cardinality           

nodes                         0.9999986305066669^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vertex_(graph_theory) 

residual graph                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Flow_network          

vertices                      0.8018747886158857^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Graph_(mathematics)   

algorithms                    0.9999808589623597^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

complex networks              0.9991311896460318^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Complex_network       

nodes                         0.9999986305066669^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vertex_(graph_theory) 

network                       0.999946752868031^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Flow_network          

optimization                  0.9999997616008898^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

nodes                         0.9999986305066669^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vertex_(graph_theory) 

nodes                         0.9999986305066669^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vertex_(graph_theory) 

nodes                         0.9999986305066669^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vertex_(graph_theory) 

minimum dominating set        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Dominating_set        

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

time complexity               0.7637419101209906^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Time_complexity       

algorithmic                   0.9757004770148866^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

complex networks              0.9991311896460318^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Complex_network       

connected dominating set      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Connected_dominating_set

algorithms                    0.9999808589623597^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

graph                         0.9989503032091078^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Graph_(mathematics)   

