Abstract Fingerprint has been widely used in a variety of biometric identification systems in the past several years due to its uniqueness and immutability. With the rapid development of fingerprint identification techniques, many fingerprint identification systems are in urgent need to deal with large-scale fingerprint storage and high concurrent recognition queries, which bring huge challenges to the system. In this circumstance, we design and implement a distributed and load-balancing fingerprint identification system named Pegasus, which includes a distributed feature extraction subsystem and a distributed feature storage subsystem. The feature extraction procedure combines the Hadoop Image Processing Interface (HIPI) library to enhance its overall processing speed; the feature storage subsystem optimizes MongoDB’s default load balance strategy to improve the efficiency and robustness of Pegasus. Experiments and simulations are carried out, and results show that Pegasus can reduce the time cost by 70�uring the feature extraction procedure. Pegasus also balances the difference of access load among front-end mongos nodes to less than 5�Additionally, Pegasus reduces over 40�f data migration among back-end data shards to obtain a more reasonable data distribution based on the operation load (insertion, deletion, update, and query) of each shard.
fingerprint identification1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Fingerprint           

Pegasus                       0.8697388843689122^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bristol_Pegasus       

robustness                    0.9852759398900431^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Robustness_(computer_science)

biometric identification      0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Biometrics            

MongoDB                       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/MongoDB               

load-balancing                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Load_balancing_(computing)

fingerprint                   0.8913231159602717^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Fingerprint_recognition

nodes                         0.9939196621113942^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Node_(networking)     

load balance                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Load_balancing_(computing)

back-end                      0.879728910448985^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Front_and_back_ends   

Pegasus                       0.8697388843689122^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bristol_Pegasus       

Pegasus                       0.8697388843689122^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bristol_Pegasus       

feature extraction            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Feature_extraction    

fingerprint identification    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Fingerprint           

Pegasus                       0.8697388843689122^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bristol_Pegasus       

feature extraction            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Feature_extraction    

front-end                     0.999999790151741^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Front_and_back_ends   

Image Processing              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Image_processing      

immutability                  0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Immutable_object      

data migration                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Data_migration        

fingerprint identification    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Fingerprint           

Fingerprint                   0.9737010385368323^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Fingerprint_recognition

Pegasus                       0.8697388843689122^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Bristol_Pegasus       

Hadoop                        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Apache_Hadoop         

feature extraction            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Feature_extraction    

concurrent                    0.9918210670460346^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Parallel_computing    

library                       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Library_(computing)   

