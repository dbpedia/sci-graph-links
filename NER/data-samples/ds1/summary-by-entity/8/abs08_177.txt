Abstract This paper considers enumeration of substring equivalence classes introduced by Blumer et al. (J ACM 34(3):578–595, 1987). These equivalence classes were originally proposed to define a text indexing structure called compact directed acyclic word graphs (CDAWGs). These equivalence classes are also useful for text analysis, since they group together redundant substrings with essentially identical occurrences. In this paper, we present how to enumerate these equivalence classes using only suffix arrays and two auxiliary arrays (rank arrays and lcp arrays), in O(n) time for a given string of length n over the integer alphabet. The proposed method overcomes all the existing algorithms which require $$O(n \log \sigma )$$ O(nlogσ) time, where $$\sigma $$ σ is the alphabet size. Our experimental results show that the proposed method is also practically faster and more memory efficient than the existing ones. Furthermore, we propose an O(n)-time algorithm which constructs the CDAWG of an input string over the integer alphabet. This algorithm is based on the above-mentioned algorithm to enumerate equivalence classes. Our experiments show that the proposed method runs faster than the existing algorithm on large alphabets.
algorithms          0.9999999813494471^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

equivalence classes           0.9994984620473194^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Equivalence_class     

alphabets                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Alphabet_(computer_science)

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

arrays                        0.999999813392623^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Array_data_structure  

runs                          0.9910411126527509^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Run_(baseball)        

graphs                        0.9731972536679964^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Graph_(mathematics)   

equivalence classes           0.9994984620473194^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Equivalence_class     

alphabet                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Alphabet_(computer_science)

equivalence classes           0.9994984620473194^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Equivalence_class     

equivalence classes           0.9994984620473194^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Equivalence_class     

arrays                        0.999999813392623^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Array_data_structure  

sigma                         0.9028376722511413^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Standard_deviation    

Blumer                        0.999999999697252^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Herbert_Blumer        

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

substring                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Substring             

acyclic                       0.9973372901654868^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Graph_(mathematics)   

substrings                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Substring             

alphabet                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Alphabet_(computer_science)

compact                       0.9999855543542001^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Compact_space         

redundant                     0.9952551513178496^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Redundancy_(information_theory)

suffix arrays                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Suffix_array          

equivalence classes           0.9994984620473194^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Equivalence_class     

integer                       0.9999998375589162^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integer               

ACM                           0.9999999998580051^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Association_for_Computing_Machinery

memory                        0.8368418552000911^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_data_storage 

lcp                           0.9223665595346856^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/LCP_array             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

sigma                         0.9028376722511413^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Standard_deviation    

auxiliary                     0.9964348008379982^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Auxiliary_verb        

arrays                        0.999999813392623^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Array_data_structure  

alphabet                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Alphabet_(computer_science)

integer                       0.9999998375589162^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integer               

