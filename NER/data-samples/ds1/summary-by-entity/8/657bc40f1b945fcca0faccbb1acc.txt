Abstract We present a technique for efficient stateless model checking of programs that execute under the relaxed memory models TSO and PSO. The basis for our technique is a novel representation of executions under TSO and PSO, called chronological traces. Chronological traces induce a partial order relation on relaxed memory executions, capturing dependencies that are needed to represent the interaction via shared variables. They are optimal in the sense that they only distinguish computations that are inequivalent under the widely-used representation by Shasha and Snir. This allows an optimal dynamic partial order reduction algorithm to explore a minimal number of executions while still guaranteeing full coverage. We apply our techniques to check, under the TSO and PSO memory models, LLVM assembly produced for C/pthreads programs. Our experiments show that our technique reduces the verification effort for relaxed memory models to be almost that for the standard model of sequential consistency. This article is an extended version of Abdulla et al. (Tools and algorithms for the construction and analysis of systems, Springer, New York, pp 353â€“367, 2015), appearing in TACAS 2015.
TSO                 0.9999998693648507^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Time_Sharing_Option   

TSO                           0.9999998693648507^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Time_Sharing_Option   

LLVM                          0.9999997424155586^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/LLVM                  

standard model                0.7753779252151821^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Standard_Model        

model checking                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Model_checking        

dependencies                  0.9502472936182982^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_dependency       

partial order                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Partially_ordered_set 

memory models                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Memory                

shared variables              0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Shared_Variables      

algorithms                    0.9999999945612217^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

partial order                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Partially_ordered_set 

sequential consistency        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Sequential_consistency

PSO                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Particle_swarm_optimization

memory models                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Memory                

pthreads                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/POSIX_Threads         

PSO                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Particle_swarm_optimization

stateless                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/State_(computer_science)

memory                        0.9641569528691318^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_memory       

TSO                           0.9999998693648507^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Time_Sharing_Option   

Springer                      0.6353726201480463^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Axel_Springer_AG      

memory models                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Memory                

PSO                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Particle_swarm_optimization

New York                      0.6053774981240448^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/New_York              

