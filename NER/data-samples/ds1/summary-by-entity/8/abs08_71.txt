Abstract Distributed generalized assignment problem (D-GAP) is very popular in scalable multi-agent systems. However, existing algorithms are either not effective or efficient in large-scale or highly dynamic domains owing to limited communications and computational resources. In this paper, we present a novel approach named intelligent routing algorithm (IRA) to address this issue. In IRA, in order to reduce communication load, a decentralized model for agents is proposed to jointly search for optimized solutions. Moreover, due to the complexity of distributed generalized assignment problem (D-GAP) in a massive multi-agent system where agents cannot perform optimal search based on their local views, we propose a heuristic algorithm that can find an approximate optimized solution. By inferring knowledge from their previous communicated searches, agents are able to predict how to deploy future similar searches more efficiently. If an agent can solve some parts of D-GAP well, similar searches will be sent to it. By taking advantage of the accumulation effect to agentsâ€™ local knowledge, agents can independently make simple decisions with highly reliable performance and limited communication overheads. The simulation and the experimental results demonstrate the feasibility and efficiency of our algorithm.
routing             0.9999999732447126^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Routing               

overheads                     0.9999999994671498^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Overhead_(computing)  

decentralized model           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decentralised_system  

computational resources       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Computational_resource

generalized assignment problem1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Generalized_assignment_problem

simulation                    0.9992643343224853^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_simulation   

domains                       0.9999053967624149^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Domain_of_a_function  

generalized assignment problem1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Generalized_assignment_problem

communication                 0.7690193246016693^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communication         

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

multi-agent system            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Multi-agent_system    

IRA                           0.9424241701811843^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Individual_retirement_account

communication                 0.7690193246016693^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communication         

heuristic algorithm           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Heuristic_(computer_science)

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

algorithms                    0.9999999990977813^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

multi-agent systems           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Multi-agent_system    

IRA                           0.9424241701811843^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Individual_retirement_account

