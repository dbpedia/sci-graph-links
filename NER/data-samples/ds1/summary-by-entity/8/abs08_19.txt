Abstract We provide an approach to formally analyze the computational behavior of coroutines in logic programs and to compile these computations into new programs, not requiring any support for coroutines. The problem was already studied near to 30Â years ago, in an analysis and transformation technique called compiling control. However, this technique had a strong ad hoc flavor: the completeness of the analysis was not well understood and its symbolic evaluation was also rather ad hoc. We show how abstract conjunctive partial deduction, introduced by Leuschel in 2004, provides an appropriate setting to redefine compiling control. We define an abstract domain and all abstract operations required by abstract conjunctive partial deduction. We prove that these concepts satisfy all the correctness conditions imposed by the framework and therefore inherit its main correctness theorem. We also show that there exist more complex coroutining examples which do not fit within abstract conjunctive partial deduction and we propose some further extensions to include them.
abstract            0.6967766450925862^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Abstract_algebra      

coroutines                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Coroutine             

ad hoc                        0.9994914005764505^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Ad_hoc                

abstract                      0.6967766450925862^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Abstract_algebra      

abstract                      0.6967766450925862^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Abstract_algebra      

abstract                      0.6967766450925862^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Abstract_algebra      

domain                        0.9999979792569273^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Domain_of_a_function  

ad hoc                        0.9994914005764505^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Ad_hoc                

logic programs                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Logic_programming     

theorem                       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Theorem               

abstract                      0.6967766450925862^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Abstract_algebra      

coroutines                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Coroutine             

