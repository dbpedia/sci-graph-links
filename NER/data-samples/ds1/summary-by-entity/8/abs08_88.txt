Abstract In this work, we use algebraic methods for studying distance computation and subgraph detection tasks in the congested clique model. Specifically, we adapt parallel matrix multiplication implementations to the congested clique, obtaining an $$O(n^{1-2/\omega })$$ O(n1-2/ω) round matrix multiplication algorithm, where $$\omega < 2.3728639$$ ω<2.3728639 is the exponent of matrix multiplication. In conjunction with known techniques from centralised algorithmics, this gives significant improvements over previous best upper bounds in the congested clique model. The highlight results include:1.triangle and 4-cycle counting in $$O(n^{0.158})$$ O(n0.158) rounds, improving upon the $$O(n^{1/3})$$ O(n1/3) algorithm of Dolev et al. [DISC 2012],2.a $$(1   o(1))$$ (1 o(1)) -approximation of all-pairs shortest paths in $$O(n^{0.158})$$ O(n0.158) rounds, improving upon the $$\tilde{O} (n^{1/2})$$ O~(n1/2) -round $$(2   o(1))$$ (2 o(1)) -approximation algorithm given by Nanongkai [STOC 2014], and3.computing the girth in $$O(n^{0.158})$$ O(n0.158) rounds, which is the first non-trivial solution in this model. In addition, we present a novel constant-round combinatorial algorithm for detecting 4-cycles.
Dolev               0.9999999954164878^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Dolev                 

STOC                          0.9999999999994316^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Symposium_on_Theory_of_Computing

algebraic methods             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algebra               

computing                     0.7265373404623782^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computation           

algorithmics                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

n1                            0.4636294702066633^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/N1_(rocket)           

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

subgraph                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Glossary_of_graph_theory

omega                         0.9779231027480166^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Omega                 

matrix multiplication         0.9819769066061526^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Matrix_(mathematics)  

upper bounds                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Upper_and_lower_bounds

matrix multiplication         0.9819769066061526^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Matrix_(mathematics)  

omega                         0.9779231027480166^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Omega                 

DISC                          0.9913506986750995^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/DISC_assessment       

n1                            0.4636294702066633^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/N1_(rocket)           

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

computation                   0.9999770453028357^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computation           

4-                            0.9991886033299316^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Flat-four_engine      

girth                         0.9999999999993179^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Girth_(graph_theory)  

shortest paths                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Shortest_path_problem 

multiplication algorithm      0.9999988955525356^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multiplication_algorithm

combinatorial                 0.56397158706624^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Combinatorial_optimization

approximation algorithm       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Approximation_algorithm

clique                        0.7568908082935096^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Clique_(graph_theory) 

exponent                      0.9999999923910536^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exponentiation        

clique                        0.7568908082935096^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Clique_(graph_theory) 

approximation                 0.999088377554758^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Approximation_algorithm

-cycle                        0.9999999999641886^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cycle                 

n1                            0.4636294702066633^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/N1_(rocket)           

4-                            0.9991886073522026^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Flat-four_engine      

clique                        0.7568908082935096^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Clique_(graph_theory) 

triangle                      0.9999999988922355^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Triangle              

