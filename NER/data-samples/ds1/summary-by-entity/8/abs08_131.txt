Abstract Recently, the incidence matrices of some block designs have been considered as the mother matrices of some quasi-cyclic (QC) low-density parity-check (LDPC) codes with maximum girth 20. In fact, the authors have introduced a deterministic algorithm which randomly, by a computer search, generates the slope vectors corresponding to the codes with desired girth, not greater than 20. In this paper, by rearranging the blocks of each block design, some slope vectors are proposed with an explicit method such that their corresponding QC LDPC codes have girth 8. Then, for each slope vector S, the lower bound Q(S) is found such that the QC LDPC codes with slope vector S and block size N, N ≥ Q, have girth at least 8.
vectors             0.9837227467471379^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vector_space          

LDPC codes                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Low-density_parity-check_code

vectors                       0.9837227467471379^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vector_space          

incidence matrices            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Incidence_matrix      

block design                  0.9999999408729554^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Block_design          

vector                        0.8832897068290994^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Array_data_structure  

QC                            0.8493390305782981^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Quality_control       

girth                         0.9999466445739029^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Girth_(graph_theory)  

girth                         0.9999466445739029^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Girth_(graph_theory)  

low-density parity-check (LDPC) codes1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Low-density_parity-check_code

block size                    0.9999252466106797^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Block_size_(cryptography)

vector                        0.8832897068290994^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Array_data_structure  

QC                            0.8493390305782981^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Quality_control       

girth                         0.9999466445739029^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Girth_(graph_theory)  

explicit method               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Explicit_and_implicit_methods

matrices                      0.9999999292023202^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Matrix_(mathematics)  

LDPC codes                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Low-density_parity-check_code

QC                            0.8493390305782981^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Quality_control       

girth                         0.9999466445739029^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Girth_(graph_theory)  

deterministic algorithm       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Deterministic_algorithm

block designs                 0.9999997339612391^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Block_design          

computer                      0.9834029277794328^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_science      

