Abstract We study the intercell coordination problem between two interfering cells combined with dynamic TDD serving elastic data traffic. We model the system at the so-called flow level, where the number of flows varies dynamically and each flow has a random service requirement. Due to the interference between the stations the system is modeled as a set of four interacting processor sharing queues. Our objective is to consider, by using several approaches, the gains from dynamic policies that utilize instantaneous state information to minimize the total mean number of flows. Assuming that the capacity is shared dynamically according to the notion of balanced fairness yields a general policy that is also Pareto optimal, and we are able to explicitly analyze its performance. For exponential service times, we also apply the theory of Markov decision processes and the policy iteration algorithm to minimize the number of flows in the system. Finally, we define priority policies for certain special cases and show that they are even stochastically optimal. Our numerical results show that the gains from the dynamic policies compared with a statically optimized policy can be significant. Surprisingly, the gains can be achieved largely by our novel robust heuristic policy that only relies on instantaneous information about the number of flows.
processor           0.9999464914229514^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Central_processing_unit

Markov decision processes     0.9999119870722641^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Markov_decision_process

TDD                           0.9784547006155306^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Duplex_(telecommunications)

policy iteration              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Markov_decision_process

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

interference                  0.9593896954322872^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Interference_(communication)

heuristic                     0.9999999832701861^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Heuristic             

cells                         0.9993865459210881^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cell_(biology)        

elastic                       0.999958951184787^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Elasticity_(physics)  

coordination problem          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Coordination_game     

Pareto optimal                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Pareto_efficiency     

queues                        0.9593561918931299^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Queueing_theory       

stochastically                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Stochastic            

intercell                     0.9999999992739959^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Intercell             

