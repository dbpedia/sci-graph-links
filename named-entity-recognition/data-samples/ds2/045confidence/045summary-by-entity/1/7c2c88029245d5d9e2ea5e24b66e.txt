Abstract We consider a problem of finding maximum weight subgraphs (MWS) that satisfy hard constraints in a weighted graph. The constraints specify the graph nodes that must belong to the solution as well as mutual exclusions of graph nodes, i.e., pairs of nodes that cannot belong to the same solution. Our main contribution is a novel inference approach for solving this problem in a sequential monte carlo (SMC) sampling framework. Usually in an SMC framework there is a natural ordering of the states of the samples. The order typically depends on observations about the states or on the annealing setup used. In many applications (e.g., image jigsaw puzzle problems), all observations (e.g., puzzle pieces) are given at once and it is hard to define a natural ordering. Therefore, we relax the assumption of having ordered observations about states and propose a novel SMC algorithm for obtaining maximum a posteriori estimate of a high-dimensional posterior distribution. This is achieved by exploring different orders of states and selecting the most informative permutations in each step of the sampling. Our experimental results demonstrate that the proposed inference framework significantly outperforms loopy belief propagation in solving the image jigsaw puzzle problem. In particular, our inference quadruples the accuracy of the puzzle assembly compared to that of loopy belief propagation.
subgraphs           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Glossary_of_graph_theory

sequential monte carlo        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Particle_filter       

graph                         0.9999972972983785^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Graph_(mathematics)   

puzzle                        0.9999984755528681^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Puzzle                

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

jigsaw puzzle                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Jigsaw_puzzle         

puzzle                        0.9999984755528681^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Puzzle                

annealing                     0.9999883972112786^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Annealing_(metallurgy)

hard constraints              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Constraint_(mathematics)

belief propagation            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Belief_propagation    

graph                         0.9999972972983785^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Graph_(mathematics)   

permutations                  0.9999999998971134^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Permutation           

weighted graph                0.9999999991085815^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Graph_(mathematics)   

jigsaw puzzle                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Jigsaw_puzzle         

belief propagation            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Belief_propagation    

posterior distribution        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Posterior_probability 

MWS                           0.9984346287763058^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Wernerian_Natural_History_Society

