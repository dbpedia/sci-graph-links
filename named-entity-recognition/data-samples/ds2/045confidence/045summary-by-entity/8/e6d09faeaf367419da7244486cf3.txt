Abstract Security system can be enhanced by cascading approach where two or more cryptographic algorithms are applied serially or parallel. In this paper the plaintext is first divided into number of blocks and each block are first encrypted by Recursive Positional Substitution on Prime-Nonprime of Cluster (RPSPNC) and then the resultant blocks are encrypted by Triangular Encryption (TE). In RPSPNC source stream is divided into blocks and a generating function is applied on each block to generate a same size of intermediate block t, repetition of this generating function for finite number of time regenerates the original block. In TE, source stream is broken into blocks of size n, and then XNOR operation is performed from MSB to LSB generating a block of size n − 1 and continues to form a triangle. Encryption is done in any of four types and decryption is done in similar method. Lastly combining all the encrypted blocks the ciphertext is generated. Thus applying cascaded approach much better result has been generated as compared to separate RPSPNC and TE. The results are also compared with State-of-art technique from literature, RCT, RMRO and much known RSA.
decryption          0.894809515405948^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Cryptography          

LSB                           0.9999999993849542^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Least_significant_bit 

ciphertext                    0.9999999987761612^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Ciphertext            

RCT                           0.96607077343013^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Rational_choice_theory

RSA                           0.7813761577116612^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/RSA_(security_firm)   

plaintext                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Plaintext             

cryptographic                 0.9972637032728072^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cryptography          

algorithms                    0.9999500256053834^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Algorithm             

generating function           0.9999999979595486^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Generating_function   

generating function           0.9999999979595486^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Generating_function   

source stream                 0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/River_source          

triangle                      0.7320981698984053^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Triangle              

MSB                           0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Most_significant_bit  

source stream                 0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/River_source          

XNOR                          0.9440504551735458^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/XNOR_gate             

