Abstract The privacy problem of many RFID systems has been extensively studied. Yet integrity in RFID has not received much attention as regular computer systems. When we evaluate an identification protocol for an RFID system for anti-counterfeiting, it is important to consider integrity issues. Moreover, many RFID systems are accessed by multiple level trust parties, which makes comprehensive integrity protection even harder. In this paper, we first propose an integrity model for RFID protocols. Then we use the model to analyze the integrity problems in Squealing Euros protocol. Squealing Euros was proposed by Juels and Pappu for RFID enabled banknotes that will support anti-forgery and lawful tracing yet preserve individualâ€™s privacy. We analyze its integrity, we then discuss the problems that arise and propose some solutions to these problems. Then an improved protocol with integrity protection for the law enforcement is constructed, which includes an unforgeable binding between the banknote serial number and the RF ciphertext only readable to law enforcement. This same protocol can be applied in many other applications which require a privacy protecting anti-counterfeiting mechanism.
RFID                0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Radio-frequency_identification

RF                            0.9999999897866019^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Radio_frequency       

protocol                      0.9991910495979304^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

protocol                      0.9991910495979304^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

banknotes                     0.9999993551818794^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Banknote              

trust                         0.9990342689450584^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Trust_(social_sciences)

protocol                      0.9991910495979304^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

ciphertext                    0.9999999999296278^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

RFID                          0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Radio-frequency_identification

RFID                          0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Radio-frequency_identification

RFID                          0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Radio-frequency_identification

integrity protection          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Data_integrity        

integrity protection          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Data_integrity        

RFID                          0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Radio-frequency_identification

RFID                          0.9999999999998863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Radio-frequency_identification

protocol                      0.9991910495979304^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

