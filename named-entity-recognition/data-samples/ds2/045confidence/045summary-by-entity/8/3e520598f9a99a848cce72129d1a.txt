Abstract A new channel decoder LSI, which will be used in digital satellite TV broadcasting Set-Top Boxes, has been designed. This LSI's functions include AD/DA conversion, QPSK demodulating, Viterbi decoding, frame synchronization, convolutional deinterleaving, Reed-Solomon (RS) decoding, and descrambling. We use a new method for Viterbi Decoding called the Tracking Survivor State Information (TSSI) method, which not only reduces power consumption, but also solves the problem of increasing memory size. To reduce the size of RS decoder circuit, we used a three-stage-pipeline structure as well as designed a new architecture to realize Euclid's algorithm. This device has been fabricated in a 0.35 µm 3-metal CMOS standard cell-based process and is composed of 670 K transistors. In this paper, we describe the TSSI method of the Viterbi Decoder and the Reed-Solomon Decoder's new 3-stage pipeline architecture.
µm                  0.9628379520165392^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Micrometre            

Reed-Solomon                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Reed–Solomon_error_correction

transistors                   0.9999895825317588^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Transistor            

frame synchronization         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Frame_synchronization 

demodulating                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Demodulation          

memory                        0.9916830007741684^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_memory       

Viterbi Decoder               0.9996685369681291^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Viterbi_decoder       

LSI                           0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integrated_circuit    

convolutional                 0.9947307932362603^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Convolutional_code    

decoder                       0.9999999529447916^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Decoder               

LSI                           0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integrated_circuit    

CMOS                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/CMOS                  

satellite TV                  0.8755784988887698^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Satellite             

descrambling                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Cable_converter_box   

digital                       0.9215212823490488^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Digital_electronics   

Reed-Solomon                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Reed–Solomon_error_correction

QPSK                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Phase-shift_keying    

architecture                  0.9817835995956528^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_architecture 

metal                         0.9999990480517892^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Metal                 

pipeline architecture         0.9318287667782985^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Pipeline_(computing)  

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

Euclid                        0.950524380474316^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Euclid                

decoder                       0.9999999529447916^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Decoder               

