Abstract A fundamental requirement for nodes in ad hoc and sensor networks is the ability to correctly determine their neighborhood. Many applications, protocols, and network wide functions rely on correct neighborhood discovery. Malicious nodes that taint neighborhood information using wormholes can significantly disrupt the operation of ad hoc networks. Protocols that depend only on cryptographic techniques (e.g, authentication and encryption) may not be able to detect or prevent such attacks. In this paper we propose SECUND, a protocol for creating a SECUre NeighborhooD, that makes use of discrepancies in routing hop count information to detect “true” neighbors and remove those links to nodes that appear to be neighbors, but are not really neighbors. SECUND is simple, localized and needs no special hardware, localization, or synchronization. We evaluate SECUND using simulations and demonstrate its effectiveness in the presence of multiple and multi-ended wormholes. Lastly, we present approaches to improve the efficiency of the SECUND process.
authentication      0.9999999952002554^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Authentication        

sensor networks               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Wireless_sensor_network

ad hoc                        0.9999588640444509^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mobile_ad_hoc_network 

wormholes                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Wormhole              

encryption                    0.9910900598040444^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

ad hoc networks               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Wireless_ad_hoc_network

routing                       0.999995307783005^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Routing               

synchronization               0.9996092406770736^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Synchronization       

wormholes                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Wormhole              

hop count                     0.791767903229211^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Hop_count             

protocol                      0.9999991233039941^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Communications_protocol

