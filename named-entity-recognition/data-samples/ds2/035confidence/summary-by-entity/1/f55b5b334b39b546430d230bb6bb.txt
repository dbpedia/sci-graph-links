Abstract In this note the studies begun in Blum and Suttmeier (1999) on adaptive finite element discretisations for nonlinear problems described by variational inequalities are continued. Similar to the concept proposed, e.g., in Becker and Rannacher (1996) for variational equalities, weighted a posteriori estimates for controlling arbitrary functionals of the discretisation error are constructed by using a duality argument. Numerical results for the obstacle problem demonstrate the derived error bounds to be reliable and, used for an adaptive grid refinement strategy, to produce economical meshes.
equalities          0.8759553093579588^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Equation              

meshes                        0.9999881246505122^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Polygon_mesh          

obstacle problem              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Obstacle_problem      

discretisation                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Discretization        

nonlinear                     0.9996548929090708^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Nonlinear_system      

finite element                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Finite_element_method 

duality                       0.8858037113926747^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Duality_(mathematics) 

variational inequalities      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Variational_inequality

variational                   0.9999999997689315^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Calculus_of_variations

grid                          0.9974653938036145^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Lattice_graph         

functionals                   0.9999999428856671^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Functional_(mathematics)

