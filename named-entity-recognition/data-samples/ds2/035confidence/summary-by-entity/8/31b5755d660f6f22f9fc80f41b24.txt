Abstract When users issue a query to a database, they have expectations about the results. If what they search for is unavailable in the database, the system will return an empty result or, worse, erroneous mismatch results. We call this problem the MisMatch problem. In this paper, we solve the MisMatch problem in the context of XML keyword search. Our solution is based on two novel concepts that we introduce: target node type and Distinguishability. Target Node Type represents the type of node a query result intends to match, and Distinguishability is used to measure the importance of the query keywords. Using these concepts, we develop a low-cost post-processing algorithm on the results of query evaluation to detect the MisMatch problem and generate helpful suggestions to users. Our approach has three noteworthy features: (1) for queries with the MisMatch problem, it generates the explanation, suggested queries and their sample results as the output to users, helping users judge whether the MisMatch problem is solved without reading all query results; (2) it is portable as it can work with any lowest common ancestor-based matching semantics (for XML data without ID references) or minimal Steiner tree-based matching semantics (for XML data with ID references) which return tree structures as results. It is orthogonal to the choice of result retrieval method adopted; (3) it is lightweight in the way that it occupies a very small proportion of the whole query evaluation time. Extensive experiments on three real datasets verify the effectiveness, efficiency and scalability of our approach. A search engine called XClear has been built and is available at http://xclear.comp.nus.edu.sg.
database            0.996814887693938^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Database              

database                      0.996814887693938^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Database              

ID                            0.9999999999979536^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Identifier            

Target                        0.9674870293979717^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Target_Corporation    

lightweight                   0.9844425149038227^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Lightweight_Linux_distribution

keyword search                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Search_algorithm      

XML                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

XML                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

judge                         0.9999731215154314^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Judge                 

orthogonal                    0.9999999952101462^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Orthogonality         

semantics                     0.9825925604257228^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Semantics             

node                          0.9999901354358343^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tree_(data_structure) 

scalability                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Scalability           

semantics                     0.9825925604257228^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Semantics             

node                          0.9999901354358343^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tree_(data_structure) 

keywords                      0.9944407663969408^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Index_term            

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

XML                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/XML                   

tree structures               0.9999976582564748^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tree_(data_structure) 

ID                            0.9999999999979536^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Identifier            

datasets                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Data_set              

post-processing               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Image_processing      

search engine                 0.9999997481855052^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Web_search_engine     

