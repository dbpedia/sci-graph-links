Abstract The evolution of network technologies and mobile devices (equipped with low-cost video cameras) offer new multimedia services for mobile telephony, such as video communications. However, this kind of multimedia services needs to meet special requirements in terms of low complexity on both sides of the communication. Currently, most of mobile video communications are based on traditional codecs, which concentrates high complexity on the encoder side. Then, Distributed Video Coding tackles the problem of tougher complexity constraints for encoding algorithms at the expense of increasing decoder complexity. Taking into account the benefits of both paradigms, Distributed Video Coding to H.264 transcoding provides such multimedia systems with low complexity on both sides. Moreover, there is a H.264 extension called Scalable Video Coding which supports a variety of networks and devices. This proposed scheme moves the highly-complex processes to the transcoder, which has more resources. However, to achieve a low-delay transmission between mobile devices, transcoder time must be reduced. For this purpose, this paper focuses on reducing the complexity of the transcoder. To start with, the first transcoding stage is improved by means of a multicore processor, which executes the decoding algorithm in parallel. Then, the second stage uses the motion vectors generated during the first decoding stage to reduce the motion estimation complexity of the H.264 encoder and of its scalable extension as well. To support different Distributed Video Coding/H.264 patterns and profiles, the proposed transcoder includes a mapping between different kinds of frames and GOP lengths from both paradigms. As a result, this paper proposes an efficient algorithm to support mobile-to-mobile video communications which reduces the transcoding time about 70Â % without significant rate-distortion penalty.
multicore processor 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Multi-core_processor  

transcoder                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transcoding           

paradigms                     0.9999744559522431^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Programming_paradigm  

H.264                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/H.264/MPEG-4_AVC      

evolution                     0.9999993591572782^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Evolution             

tackles                       0.9160339940060824^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Block_and_tackle      

mobile devices                0.9947490098290823^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mobile_device         

codecs                        0.9999935604039798^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Codec                 

video cameras                 0.9493769000810086^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Camcorder             

decoder                       0.9999999999653255^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Codec                 

motion vectors                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Motion_vector         

transcoding                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transcoding           

transcoding                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transcoding           

transcoder                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transcoding           

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

transcoding                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transcoding           

communication                 0.9761026799694057^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Telecommunication     

encoder                       0.9995985631388481^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Codec                 

mobile video                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Mobile_content        

mobile telephony              0.999967961051728^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Mobile_phone          

network                       0.9990549521130612^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_network      

encoder                       0.9995985631388481^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Codec                 

encoding                      0.9999999437447984^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encoder               

algorithms                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

H.264                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/H.264/MPEG-4_AVC      

motion estimation             0.675228979599274^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Motion_compensation   

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

transcoder                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transcoding           

multimedia systems            0.9999999999990905^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multimedia            

multimedia                    0.9999999999779448^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multimedia            

mobile devices                0.9947490098290823^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mobile_device         

Scalable Video Coding         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Scalable_Video_Coding 

transmission                  0.9917809383768166^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_transmission     

H.264                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/H.264/MPEG-4_AVC      

lengths                       0.9999460304826118^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Euclidean_vector      

GOP                           0.9999999961178219^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Group_of_pictures     

multimedia                    0.9999999999779448^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Multimedia            

transcoder                    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Transcoding           

paradigms                     0.9999744559522431^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Programming_paradigm  

H.264                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/H.264/MPEG-4_AVC      

penalty                       0.9033878452229549^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Sanctions_(law)       

