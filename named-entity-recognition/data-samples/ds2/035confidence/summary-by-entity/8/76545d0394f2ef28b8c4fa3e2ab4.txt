Abstract Cloud storage brings strong conveniences for flexible data sharing. When sharing data with a large number of entities described with fuzzy identities, the data owners must leverage a suitable encryption scheme to meet the security and efficiency requirements. (hierarchical) Identity-based encryption is a promising candidate to ensure fuzzy-entity data sharing while meeting the security requirement, but encounters the efficiency difficulty in multireceiver settings. We introduce the notion of subtree-based encryption (SBE) to support multireceiver data sharing mechanism in large-scale enterprises. Users in SBE are organized in a tree structure. Superior users can generate the secret keys to their subordinates. Unlike HIBE merely allowing a single decryption path, SBE enables encryption for a subset of users. We define the security notion for SBE, namely Ciphertext Indistinguishability against Adaptively Chosen-Sub-Tree and Chosen-Ciphertext Attack (IND-CST-CCA2). We propose two secure SBE schemes (SBEs). We first propose a basic SBEs against Adaptively Chosen-Sub-Tree and Chosen-Plaintext Attack (IND-CST-CPA), in which we do not allow the attacker to get decryption results from other users in the security game. We then propose a CCA2-secure SBEs from the basic scheme without requiring any other cryptographic primitives. Our CCA2-secure scheme natively allows public ciphertext validity test, which is a useful property when a CCA2-secure SBEs is used to design advanced protocols and auditing mechanisms for fuzzy-entity data sharing.
SBE                 0.9099035206976475^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/SBE_(company)         

Identity-based encryption     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/ID-based_encryption   

SBEs                          0.9999999982921963^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Semiconductor_Bloch_equations

Ciphertext Indistinguishability1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Ciphertext_indistinguishability

Cloud storage                 0.9999996322100736^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cloud_storage         

cryptographic primitives      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Cryptographic_primitive

SBE                           0.9099035206976475^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/SBE_(company)         

protocols                     0.999999983252451^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Cryptographic_protocol

SBE                           0.9099035206976475^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/SBE_(company)         

SBE                           0.9099035206976475^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/SBE_(company)         

hierarchical                  0.6911854256581379^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Hierarchy             

SBEs                          0.9999999982921963^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Semiconductor_Bloch_equations

Superior                      0.7368529786737718^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Lake_Superior         

SBE                           0.9099035206976475^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/SBE_(company)         

auditing                      0.9999834339612318^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Audit                 

SBEs                          0.9999999982921963^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Semiconductor_Bloch_equations

encryption                    0.9999202139132035^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

leverage                      0.9998725478769905^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Leverage_(finance)    

single                        0.9819115749466263^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Single_(music)        

encryption                    0.9999202139132035^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

decryption                    0.9989464330451345^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

subset                        0.9751799177644933^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Subset                

encryption                    0.9999202139132035^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

SBEs                          0.9999999982921963^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Semiconductor_Bloch_equations

decryption                    0.9989464330451345^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

ciphertext                    0.9967372305820476^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

tree structure                0.5340635272434618^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tree_structure        

