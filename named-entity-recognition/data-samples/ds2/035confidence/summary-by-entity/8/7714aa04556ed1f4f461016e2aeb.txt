Abstract Identity-based encryption with keyword search (IBEKS) is a useful cryptographic primitive for cloud computing, i.e., it allows a data owner to encrypt and store his data in a cloud storage server, and later the owner can use his/her private key to produce a search trapdoor for searching the encrypted data. Existing IBEKS schemes only focus on supporting efficient and complex queries for the private key holder, while the authority, who is in charge of the generation of the private keys for users, cannot efficiently search the encrypted data. However, some applications might require the authority to efficiently search the encrypted data intended for any user. To address this problem, in this paper, we introduce a new primitive named dual trapdoor identity-based encryption with keyword search (DTIBEKS). In this primitive, the authority can use a peculiar way to produce one more trapdoor, which allows the authority to search any identityâ€™s encrypted data. We formally give the definition and security model for DTIBEKS, and then propose a novel DTIBEKS scheme. We further prove the security of our proposed DTIBEKS without random oracles. It is worth noting that our scheme can be easily transformed into identity-based encryption with fuzzy keyword search.
trapdoor            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trapdoor_function     

cloud computing               0.999749980058322^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Cloud_computing       

private key                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Public-key_cryptography

encrypt                       0.6140295347994986^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

encrypted                     0.5867064895272993^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

keyword search                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Search_algorithm      

encrypted                     0.5867064895272993^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

Identity-based encryption     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/ID-based_encryption   

random oracles                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Random_oracle         

storage server                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/File_server           

identity-based encryption     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/ID-based_encryption   

keyword search                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Search_algorithm      

dual                          0.9244422987102647^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Duality_(mathematics) 

trapdoor                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trapdoor_function     

identity-based encryption     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/ID-based_encryption   

private key                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Public-key_cryptography

security model                0.9998266690932308^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_security_model

encrypted                     0.5867064895272993^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

encrypted                     0.5867064895272993^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Encryption            

trapdoor                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Trapdoor_function     

keyword search                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Search_algorithm      

cryptographic primitive       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Cryptographic_primitive

