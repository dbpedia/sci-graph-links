Abstract This paper is the first investigation establishing the link between the meshfree state-based peridynamics method and other meshfree methods, in particular with the moving least squares reproducing kernel particle method (RKPM). It is concluded that the discretization of state-based peridynamics leads directly to an approximation of the derivatives that can be obtained from RKPM. However, state-based peridynamics obtains the same result at a significantly lower computational cost which motivates its use in large-scale computations. In light of the findings of this study, an update to the method is proposed such that the limitations regarding application of boundary conditions and the use of non-uniform grids are corrected by using the reproducing kernel approximation.
boundary conditions 0.9999999999650413^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Boundary_value_problem

particle                      0.9705057149113647^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Particle_physics      

light                         0.9813386116925339^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Light                 

discretization                0.9999999999595275^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Discretization        

meshfree methods              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Meshfree_methods      

derivatives                   0.9999998099257436^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Derivative            

approximation                 0.9992657374355984^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Numerical_analysis    

reproducing kernel            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Reproducing_kernel_Hilbert_space

reproducing kernel            1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Reproducing_kernel_Hilbert_space

approximation                 0.9992657374355984^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Numerical_analysis    

