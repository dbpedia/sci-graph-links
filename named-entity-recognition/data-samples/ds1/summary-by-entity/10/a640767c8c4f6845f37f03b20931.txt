Abstract In this paper, we propose an integrated routing strategy based on global static topology information and local dynamic data packet queue lengths to improve the transmission efficiency of scale-free networks. The proposed routing strategy is a combination of a global static routing strategy (based on the shortest path algorithm) and local dynamic queue length management, in which, instead of using an infinite buffer, the queue length of each node i in the proposed routing strategy is limited by a critical queue length Q ic . When the network traffic is lower and the queue length of each node i is shorter than its critical queue length Q ic , it forwards packets according to the global routing table. With increasing network traffic, when the buffers of the nodes with higher degree are full, they do not receive packets due to their limited buffers and the packets have to be delivered to the nodes with lower degree. The global static routing strategy can shorten the transmission time that it takes a packet to reach its destination, and the local limited queue length can balance the network traffic. The optimal critical queue lengths of nodes have been analysed. Simulation results show that the proposed routing strategy can get better performance than that of the global static strategy based on topology, and almost the same performance as that of the global dynamic routing strategy with less complexity.
scale-free networks 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Scale-free_network    

queue                         0.7219289945172142^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Priority_queue        

packet                        0.9999999769577246^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_packet        

routing                       0.9999469251501375^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Routing               

static routing                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Static_routing        

queue                         0.7219289945172142^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Priority_queue        

queue                         0.7219289945172142^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Priority_queue        

packet                        0.9999999769577246^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_packet        

routing                       0.9999469251501375^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Routing               

static routing                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Static_routing        

network traffic               0.9999969658405791^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_packet        

ic                            0.9999999956796728^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integrated_circuit    

packets                       0.9999843716192592^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_packet        

node                          0.9999998767266409^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Node_(networking)     

shortest path algorithm       1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Shortest_path_problem 

queue                         0.7219289945172142^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Priority_queue        

buffers                       0.9999999999943157^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_buffer           

topology                      0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_topology      

dynamic data                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Dynamic_data          

lengths                       0.9995877723625477^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Euclidean_vector      

forwards                      0.9979343103018385^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Forward_contract      

nodes                         0.9999998831209564^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Node_(networking)     

packets                       0.9999843716192592^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_packet        

queue                         0.7219289945172142^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Priority_queue        

queue                         0.7219289945172142^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Priority_queue        

nodes                         0.9999998831209564^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Node_(networking)     

topology                      0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_topology      

queue                         0.7219289945172142^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Priority_queue        

ic                            0.9999999956796728^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Integrated_circuit    

network traffic               0.9999969658405791^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_packet        

lengths                       0.9995877723625477^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Euclidean_vector      

transmission                  0.853766857651182^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Data_transmission     

network traffic               0.9999969658405791^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_packet        

infinite                      0.6414948380672927^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Glossary_of_graph_theory

buffers                       0.9999999999943157^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_buffer           

routing                       0.9999469251501375^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Routing               

routing                       0.9999469251501375^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Routing               

routing                       0.9999469251501375^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Routing               

transmission                  0.853766857651182^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Data_transmission     

routing table                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Routing_table         

node                          0.9999998767266409^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Node_(networking)     

packets                       0.9999843716192592^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Network_packet        

nodes                         0.9999998831209564^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Node_(networking)     

buffer                        0.9999999999965894^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Data_buffer           

queue                         0.7219289945172142^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Priority_queue        

