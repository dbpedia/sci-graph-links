Abstract In developing a ground combat vehicle (GCV), four major performance functions of GCV including firepower, mobility, vulnerability, and operability should be carefully designed and tested using modeling and simulation technology. Vulnerability is a function to be minimized for the target (GCV) to survive enemy’s attack. Vulnerability of GCV can be assessed by calculating the vulnerable area out of the projected area of GCV on the projection plane which is vertical to a shotline. To calculate the vulnerable area, the CAD model of GCV including components and subassemblies should be carefully designed considering how the damage of a part of GCV will affect three other major functions of GCV. This relationship can be obtained by target functional modeling (TFM) and Fault Tree Analysis (FTA). TFM is a diagram that shows the relationship between one of the components and one of the major performance functions of GCV. Using TFM, the components can be classified into critical and noncritical components. The other tool, FTA, is the deductive method to analyze the cause of failure of the target. This paper suggests the unified process of assessing vulnerability of GCV using TFM and FTA using SLAP (Shot Line Analysis Program,) which was developed using C/C++.
Shot Line           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Diving_shot           

ground combat vehicle         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Ground_Combat_Vehicle 

TFM                           0.868392847248939^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Kansas_City_Southern_de_México

functional modeling           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Function_model        

CAD                           0.9724821463020573^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer-aided_design 

function                      0.9953605197886295^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Function_(mathematics)

TFM                           0.868392847248939^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Kansas_City_Southern_de_México

technology                    0.9998484397003317^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Technology            

TFM                           0.868392847248939^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Kansas_City_Southern_de_México

projection plane              0.9999999998975682^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Projection_plane      

FTA                           0.9975814233447058^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Federal_Transit_Administration

vulnerability                 0.9999874775386016^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vulnerability_(computing)

vulnerability                 0.9999874775386016^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Vulnerability_(computing)

projected area                0.9999999971880698^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Projected_area        

deductive                     0.9999945217282393^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Deductive_reasoning   

simulation                    0.9758856644726872^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Simulation            

TFM                           0.868392847248939^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Kansas_City_Southern_de_México

Fault Tree Analysis (FTA)     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Fault_tree_analysis   

FTA                           0.9975814233447058^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Federal_Transit_Administration

C++                           0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/C_Sharp_(programming_language)

unified process               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Unified_Process       

