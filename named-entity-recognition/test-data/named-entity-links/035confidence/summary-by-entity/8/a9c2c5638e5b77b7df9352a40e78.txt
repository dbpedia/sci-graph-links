Abstract Exponent blinding has been known as an effective countermeasure against side-channel attacks on RSA. However, if single power traces reveal some exponent bits with certainty, an attack by Fouque et al. (Power attack on small RSA public exponent. Springer, Berlin, pp 339–353, 2006) applies that recovers the exponent. Since this attack becomes infeasible if some of these assumed exponent bits are incorrect it has not been assumed to be a realistic threat in the context of side-channel attacks. In this paper we present three generic attack variants (basic attack, enhanced attack, alternate attack), which work in the presence of considerable error rates at each bit position, disproving the hypothesis that mere exponent blinding is always sufficient to protect SPA-resistant implementations against any type of power attacks. Simulation experiments confirm that for small blinding factors the basic attack permits error rates of more than $$25~\\%$$ 25% . The enhanced attack allows smaller error rates but requires much less power traces and computations. Unlike the basic attack and the enhanced attack the alternate attack (against ECC and RSA without CRT) cannot effectively be prevented by simply enlarging the blinding factor. This paper extends (Schindler and Itoh, Exponent blinding does not always lift (Partial) SPA resistance to higher-level security. Springer, Berlin, pp 73–90, 2011) by many new results.
Schindler           0.5777242150822871^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Schindler_Group       

single                        0.7162214162560141^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Single_(music)        

hypothesis                    0.9999999868985016^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Hypothesis            

side-channel attacks          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Side_channel_attack   

countermeasure                0.7770587582173267^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Countermeasure_(computer)

Exponent                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Exponentiation        

exponent                      0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exponentiation        

RSA                           0.9999956951298264^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/RSA_(security_firm)   

Berlin                        0.9999999379981565^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Berlin                

SPA                           0.6186341779363901^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Special_Protection_Area

Berlin                        0.9999999379981565^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Berlin                

bits                          0.999999972739943^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Bit                   

resistance                    0.8011197868250021^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Electrical_resistance_and_conductance

side-channel attacks          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Side_channel_attack   

exponent                      0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exponentiation        

RSA                           0.9999956951298264^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/RSA_(security_firm)   

bits                          0.999999972739943^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Bit                   

exponent                      0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exponentiation        

Springer                      0.8856873973153663^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Springer_(Transformers)

lift                          0.9622060225269525^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Lift_(force)          

exponent                      0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exponentiation        

ECC                           0.9853903151009291^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Forward_error_correction

RSA                           0.9999956951298264^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/RSA_(security_firm)   

Exponent                      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Exponentiation        

exponent                      0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Exponentiation        

CRT                           0.9999092657606067^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cathode_ray_tube      

Springer                      0.8856873973153663^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Springer_(Transformers)

