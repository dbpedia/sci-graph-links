Abstract The design of a secure RFID identification scheme is a thought-provoking challenge, and this paper deals with this problem adopting a groundbreaking approach. The proposed protocol, called Noent, is based on cryptographic puzzles to avoid the indiscriminate disclose of the confidential information stored on tags and on an innovative role reversal distance-bounding protocol to distinguish between honest and rogue readers. The protocol provides moderate privacy protection (data and location) to single tags but its effectiveness increases hugely when it is used to protect a large population of tags (e.g., protection against inventory disclosure). Moreover, in comparison with classical approaches, Noent does not require an on-line database, which facilitates key updating and mitigates desynchronization attacks.
protocol            0.9662369038467483^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cryptographic_protocol

privacy                       0.999999999992383^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Privacy               

protocol                      0.9662369038467483^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cryptographic_protocol

puzzles                       0.9997955257666863^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Puzzle                

RFID                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Radio-frequency_identification

tags                          0.9999995055212679^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tag_(metadata)        

inventory                     0.9999999999620286^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Inventory             

single                        0.9995846787486264^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Single_(music)        

tags                          0.9999995055212679^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tag_(metadata)        

identification scheme         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Identification_scheme 

database                      0.9999999956733063^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Database              

tags                          0.9999995055212679^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Tag_(metadata)        

classical                     0.8557226457142526^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Classical_mechanics   

role reversal                 0.9999999912071189^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Role_reversal         

cryptographic                 0.9998612132389982^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cryptography          

protocol                      0.9662369038467483^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Cryptographic_protocol

