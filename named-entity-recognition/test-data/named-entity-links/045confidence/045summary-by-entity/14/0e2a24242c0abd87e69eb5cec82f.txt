Abstract We consider kernel-based non-parametric estimation of second-order product densities of spatial point patterns. We present a new family of optimal and positive kernels that shows less variance and more flexibility than optimal kernels. This family generalises most of the classical and widely used kernel functions, such as Box or Epanechnikov kernels. We propose an alternative asymptotically unbiased estimator for the second-order product density function, and compare the performance of the estimator for several members of the family of optimal and positive kernels through MISE and relative efficiency. We present a simulation study to analyse the behaviour of such kernel functions, for three different spatial structures, for which we know the exact analytical form of the product density, and under small sample sizes. Some known datasets are revisited, and we also analyse the IMD dataset in the Rhineland Regional Council in Germany.
IMD                 0.9349788143641136^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/International_Institute_for_Management_Development

simulation                    0.9876775339706226^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Computer_simulation   

density function              0.999999997163286^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Probability_density_function

variance                      0.9999998966191068^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Variance              

Germany                       0.99962173206352^^http://www.w3.org/2001/XMLSchema#double             http://dbpedia.org/resource/Germany               

kernel functions              0.9711689247767228^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Kernel_trick          

Regional Council              0.45390574035097025^^http://www.w3.org/2001/XMLSchema#double          http://dbpedia.org/resource/Regional_Council_(France)

estimator                     0.9999999964632025^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Estimator             

estimator                     0.9999999964632025^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Estimator             

classical                     0.9998752525002399^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Classical_mechanics   

Rhineland                     0.9997928268233433^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Rhineland             

kernel functions              0.9711689247767228^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Kernel_trick          

non-parametric                1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Non-parametric_statistics

