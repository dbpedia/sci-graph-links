Abstract Session key exchange has become an addressed topic in the field of communications security, particularly for the IP-based call session that travels through the public network. This paper proposes a hybrid algorithm for session key exchange. The algorithm is designed based on most of the well-proven algorithms, including RSA, D-H, MAC authentication and SHA one-way function, and most of the popular security concepts such as digital signature, digital certificates and verifications under PKI. With an integration of these security concepts and algorithms, the proposed algorithm inherits the properties of these algorithms and realizes highly secure session key exchanging, to meet the required security level of institutions for sensitive communications. It not only improves the possible deficiencies of the algorithms that are singly based on RSA or D-H, but also expands the limits when a hybrid algorithm is applied. Moreover, using MAC codes to ensure the authenticity of the call itself (in addition to ensuring the authenticity of the call parties) meets the communications security concern (in addition to the information security concerns) which relevant algorithms might fail to consider.
MAC                 0.9999999999987494^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Message_authentication_code

hybrid algorithm              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hybrid_algorithm      

algorithms                    0.999996517200469^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Algorithm             

algorithms                    0.999996517200469^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Algorithm             

digital signature             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Digital_signature     

key exchange                  0.994577918664621^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Diffie–Hellman_key_exchange

digital certificates          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Public_key_certificate

algorithms                    0.999996517200469^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Algorithm             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

authentication                0.9827893672916602^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Authentication        

RSA                           0.9999999927066483^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/RSA_(security_firm)   

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

key exchange                  0.994577918664621^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Diffie–Hellman_key_exchange

algorithms                    0.999996517200469^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Algorithm             

session key                   1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Session_key           

PKI                           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Public-key_infrastructure

hybrid algorithm              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Hybrid_algorithm      

one-way function              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/One-way_function      

RSA                           0.9999999927066483^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/RSA_(security_firm)   

MAC                           0.9999999999987494^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Message_authentication_code

algorithms                    0.999996517200469^^http://www.w3.org/2001/XMLSchema#double            http://dbpedia.org/resource/Algorithm             

