Abstract Combinatorial property testing, initiated by Rubinfeld and Sudan [23] and formally defined by Goldreich, Goldwasser and Ron in [18], deals with the following relaxation of decision problems: Given a fixed property P and an input f, distinguish between the case that f satisfies P, and the case that no input that differs from f in less than some fixed fraction of the places satisfies P. An (ε, q)-test for P is a randomized algorithm that queries at most q places of an input f and distinguishes with probability 2/3 between the case that f has the property and the case that at least an ε-fraction of the places of f need to be changed in order for it to have the property. Here we concentrate on labeled, d-dimensional grids, where the grid is viewed as a partially ordered set (poset) in the standard way (i.e. as a product order of total orders). The main result here presents an (ε, poly(1/ε))-test for every property of 0/1 labeled, d-dimensional grids that is characterized by a finite collection of forbidden induced posets. Such properties include the “monotonicity” property studied in [9,8,13], other more complicated forbidden chain patterns, and general forbidden poset patterns. We also present a (less efficient) test for such properties of labeled grids with larger fixed size alphabets. All the above tests have in addition a 1-sided error probability. This class of properties is related to properties that are defined by certain first order formulae with no quantifier alternation over the syntax containing the grid order relations. We also show that with one quantifier alternation, a certain property can be defined, for which no test with query complexity of O(n 1/4) (for a small enough fixed ε) exists. The above results identify new classes of properties that are defined by means of restricted logics, and that are efficiently testable. They also lay out a platform that bridges some previous results.
property testing    1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Property_testing      

product order                 1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Product_order         

partially ordered set         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Partially_ordered_set 

query complexity              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decision_tree_model   

/4                            0.9999999999995453^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/4                     

/1                            0.9999999999997726^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/1                     

monotonicity                  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Monotonic_function    

order relations               1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Order_theory          

poset                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Partially_ordered_set 

probability                   0.9989114570741203^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Probability           

error probability             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Probability_of_error  

poset                         1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Partially_ordered_set 

Sudan                         0.9998836657958038^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Sudan                 

posets                        1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Partially_ordered_set 

decision problems             1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Decision_problem      

randomized algorithm          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Randomized_algorithm  

