Abstract The multi-commodity flow problem is a classical combinatorial optimization problem that addresses a number of practically important issues of congestion and bandwidth management in connection-oriented network architectures. We consider solutions for distributed multi-commodity flow problems, which are solved by multiple agents operating in a cooperative but uncoordinated manner. We provide the first stateless greedy distributed algorithm for the concurrent multi-commodity flow problem with poly-logarithmic convergence. More precisely, our algorithm achieves $${1+\\varepsilon}$$ approximation, with running time $${O(H{\\cdot} \\log^{O(1)}m{\\cdot} (1{/}\\varepsilon)^{O(1)})}$$ where H is the number of edges on any allowed flow-path. No prior results exist for our model. Our algorithm is a reasonable alternative to existing polynomial sequential approximation algorithms, such as Garg–Könemann (Proceedings of the 39th Annual Symposium on Foundations of Computer Science, Palo Alto, CA, USA, pp. 300–309, 1998). The algorithm is simple and can be easily implemented or taught in a classroom. Remarkably, our algorithm requires that the increase in the flow rate on a link is more aggressive than the decrease in the rate. Essentially all of the existing flow-control heuristics are variations of TCP, which uses a conservative cap on the increase (e.g., additive), and a rather liberal cap on the decrease (e.g., multiplicative). In contrast, our algorithm requires the increase to be multiplicative, and that this increase is dramatically more aggressive than the decrease.
conservative        0.8383052989999612^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Conservatism_in_the_United_States

300–309                       0.9999999999758984^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/300s_(decade)         

liberal                       0.8791870111617057^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Liberalism            

heuristics                    0.9108909258444507^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Heuristic_(computer_science)

multi-commodity flow problem  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Multi-commodity_flow_problem

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

multi-commodity flow problem  1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Multi-commodity_flow_problem

cdot                          0.9829260008175608^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Connecticut_Department_of_Transportation

Computer Science              1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Computer_science      

Palo Alto, CA                 0.9999999998287876^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Palo_Alto,_California 

concurrent                    0.9999988410636328^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Parallel_computing    

cap                           0.5614707866121763^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Pileus_(mycology)     

cdot                          0.9829260008175608^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Connecticut_Department_of_Transportation

classical                     0.9998641831228609^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Classical_mechanics   

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

connection-oriented           1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Connection-oriented_communication

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

bandwidth management          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Bandwidth_management  

TCP                           0.9999999998749445^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Transmission_Control_Protocol

O(1)                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Big_O_notation        

distributed algorithm         0.9999994658971053^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Distributed_computing 

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

algorithm                     1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Algorithm             

USA                           0.9999801153315969^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/United_States         

stateless                     0.9999998876239778^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/State_(computer_science)

polynomial                    0.9999997968818868^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Time_complexity       

cap                           0.5614707866121763^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Pileus_(mycology)     

convergence                   0.9235891459792372^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Limit_of_a_sequence   

combinatorial optimization    0.8543477901671604^^http://www.w3.org/2001/XMLSchema#double           http://dbpedia.org/resource/Mathematical_optimization

O(1)                          1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Big_O_notation        

approximation algorithms      1.0^^http://www.w3.org/2001/XMLSchema#double                          http://dbpedia.org/resource/Approximation_algorithm

